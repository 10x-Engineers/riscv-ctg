# For Licence details look at https://gitlab.com/incoresemi/riscv-compliance/riscv_ctg/-/blob/master/LICENSE.incore

add16:
    config: 
      - check ISA:=regex(.*I.*P.*)
    opcode: 
      add16: 0
    rs1: 
      <<: *all_regs
    rs2: 
      <<: *all_regs
    rd: 
      <<: *all_regs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'simd_base_val("rs1", xlen, 16, signed=True)': 0
        'simd_base_val("rs2", xlen, 16, signed=True)': 0
        'simd_base_val("rs1", xlen, 16, signed=False)': 0
        'simd_base_val("rs2", xlen, 16, signed=False)': 0
        'simd_val_comb(xlen, 16, signed=True)': 0
        'simd_val_comb(xlen, 16, signed=False)': 0

radd16:
    config:
      - check ISA:=regex(.*I.*P.*)
    opcode:
      radd16: 0
    rs1:
      <<: *all_regs
    rs2:
      <<: *all_regs
    rd:
      <<: *all_regs
    op_comb:
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'simd_base_val("rs1", xlen, 16, signed=True)': 0
        'simd_base_val("rs2", xlen, 16, signed=True)': 0
        'simd_val_comb(xlen, 16, signed=True)': 0

uradd16:
    config:
      - check ISA:=regex(.*I.*P.*)
    opcode:
      uradd16: 0
    rs1:
      <<: *all_regs
    rs2:
      <<: *all_regs
    rd:
      <<: *all_regs
    op_comb:
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'simd_base_val("rs1", xlen, 16, signed=False)': 0
        'simd_base_val("rs2", xlen, 16, signed=False)': 0
        'simd_val_comb(xlen, 16, signed=False)': 0

kadd16:
    config:
      - check ISA:=regex(.*I.*P.*)
    opcode:
      kadd16: 0
    rs1:
      <<: *all_regs
    rs2:
      <<: *all_regs
    rd:
      <<: *all_regs
    op_comb:
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'simd_base_val("rs1", xlen, 16, signed=True)': 0
        'simd_base_val("rs2", xlen, 16, signed=True)': 0
        'simd_val_comb(xlen, 16, signed=True)': 0

ukadd16:
    config:
      - check ISA:=regex(.*I.*P.*)
    opcode:
      ukadd16: 0
    rs1:
      <<: *all_regs
    rs2:
      <<: *all_regs
    rd:
      <<: *all_regs
    op_comb:
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'simd_base_val("rs1", xlen, 16, signed=False)': 0
        'simd_base_val("rs2", xlen, 16, signed=False)': 0
        'simd_val_comb(xlen, 16, signed=False)': 0

sub16:
    config:
      - check ISA:=regex(.*I.*P.*)
    opcode:
      sub16: 0
    rs1:
      <<: *all_regs
    rs2:
      <<: *all_regs
    rd:
      <<: *all_regs
    op_comb:
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'simd_base_val("rs1", xlen, 16, signed=True)': 0
        'simd_base_val("rs2", xlen, 16, signed=True)': 0
        'simd_base_val("rs1", xlen, 16, signed=False)': 0
        'simd_base_val("rs2", xlen, 16, signed=False)': 0
        'simd_val_comb(xlen, 16, signed=True)': 0
        'simd_val_comb(xlen, 16, signed=False)': 0

rsub16:
    config:
      - check ISA:=regex(.*I.*P.*)
    opcode:
      rsub16: 0
    rs1:
      <<: *all_regs
    rs2:
      <<: *all_regs
    rd:
      <<: *all_regs
    op_comb:
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'simd_base_val("rs1", xlen, 16, signed=True)': 0
        'simd_base_val("rs2", xlen, 16, signed=True)': 0
        'simd_val_comb(xlen, 16, signed=True)': 0


ursub16:
    config:
      - check ISA:=regex(.*I.*P.*)
    opcode:
      ursub16: 0
    rs1:
      <<: *all_regs
    rs2:
      <<: *all_regs
    rd:
      <<: *all_regs
    op_comb:
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'simd_base_val("rs1", xlen, 16, signed=False)': 0
        'simd_base_val("rs2", xlen, 16, signed=False)': 0
        'simd_val_comb(xlen, 16, signed=False)': 0

ksub16:
    config:
      - check ISA:=regex(.*I.*P.*)
    opcode:
      ksub16: 0
    rs1:
      <<: *all_regs
    rs2:
      <<: *all_regs
    rd:
      <<: *all_regs
    op_comb:
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'simd_base_val("rs1", xlen, 16, signed=True)': 0
        'simd_base_val("rs2", xlen, 16, signed=True)': 0
        'simd_val_comb(xlen, 16, signed=True)': 0

uksub16:
    config:
      - check ISA:=regex(.*I.*P.*)
    opcode:
      uksub16: 0
    rs1:
      <<: *all_regs
    rs2:
      <<: *all_regs
    rd:
      <<: *all_regs
    op_comb:
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'simd_base_val("rs1", xlen, 16, signed=False)': 0
        'simd_base_val("rs2", xlen, 16, signed=False)': 0
        'simd_val_comb(xlen, 16, signed=False)': 0

cras16:
    config:
      - check ISA:=regex(.*I.*P.*)
    opcode:
      cras16: 0
    rs1:
      <<: *all_regs
    rs2:
      <<: *all_regs
    rd:
      <<: *all_regs
    op_comb:
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'simd_base_val("rs1", xlen, 16, signed=True)': 0
        'simd_base_val("rs2", xlen, 16, signed=True)': 0
        'simd_base_val("rs1", xlen, 16, signed=False)': 0
        'simd_base_val("rs2", xlen, 16, signed=False)': 0
        'simd_val_comb(xlen, 16, signed=True)': 0
        'simd_val_comb(xlen, 16, signed=False)': 0

rcras16:
    config:
      - check ISA:=regex(.*I.*P.*)
    opcode:
      rcras16: 0
    rs1:
      <<: *all_regs
    rs2:
      <<: *all_regs
    rd:
      <<: *all_regs
    op_comb:
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'simd_base_val("rs1", xlen, 16, signed=True)': 0
        'simd_base_val("rs2", xlen, 16, signed=True)': 0
        'simd_val_comb(xlen, 16, signed=True)': 0

urcras16:
    config:
      - check ISA:=regex(.*I.*P.*)
    opcode:
      urcras16: 0
    rs1:
      <<: *all_regs
    rs2:
      <<: *all_regs
    rd:
      <<: *all_regs
    op_comb:
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'simd_base_val("rs1", xlen, 16, signed=False)': 0
        'simd_base_val("rs2", xlen, 16, signed=False)': 0
        'simd_val_comb(xlen, 16, signed=False)': 0

kcras16:
    config:
      - check ISA:=regex(.*I.*P.*)
    opcode:
      kcras16: 0
    rs1:
      <<: *all_regs
    rs2:
      <<: *all_regs
    rd:
      <<: *all_regs
    op_comb:
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'simd_base_val("rs1", xlen, 16, signed=True)': 0
        'simd_base_val("rs2", xlen, 16, signed=True)': 0
        'simd_val_comb(xlen, 16, signed=True)': 0

ukcras16:
    config:
      - check ISA:=regex(.*I.*P.*)
    opcode:
      ukcras16: 0
    rs1:
      <<: *all_regs
    rs2:
      <<: *all_regs
    rd:
      <<: *all_regs
    op_comb:
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'simd_base_val("rs1", xlen, 16, signed=False)': 0
        'simd_base_val("rs2", xlen, 16, signed=False)': 0
        'simd_val_comb(xlen, 16, signed=False)': 0

crsa16:
    config:
      - check ISA:=regex(.*I.*P.*)
    opcode:
      crsa16: 0
    rs1:
      <<: *all_regs
    rs2:
      <<: *all_regs
    rd:
      <<: *all_regs
    op_comb:
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'simd_base_val("rs1", xlen, 16, signed=True)': 0
        'simd_base_val("rs2", xlen, 16, signed=True)': 0
        'simd_base_val("rs1", xlen, 16, signed=False)': 0
        'simd_base_val("rs2", xlen, 16, signed=False)': 0
        'simd_val_comb(xlen, 16, signed=True)': 0
        'simd_val_comb(xlen, 16, signed=False)': 0

rcrsa16:
    config:
      - check ISA:=regex(.*I.*P.*)
    opcode:
      rcrsa16: 0
    rs1:
      <<: *all_regs
    rs2:
      <<: *all_regs
    rd:
      <<: *all_regs
    op_comb:
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'simd_base_val("rs1", xlen, 16, signed=True)': 0
        'simd_base_val("rs2", xlen, 16, signed=True)': 0
        'simd_val_comb(xlen, 16, signed=True)': 0

urcrsa16:
    config:
      - check ISA:=regex(.*I.*P.*)
    opcode:
      urcrsa16: 0
    rs1:
      <<: *all_regs
    rs2:
      <<: *all_regs
    rd:
      <<: *all_regs
    op_comb:
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'simd_base_val("rs1", xlen, 16, signed=False)': 0
        'simd_base_val("rs2", xlen, 16, signed=False)': 0
        'simd_val_comb(xlen, 16, signed=False)': 0

kcrsa16:
    config:
      - check ISA:=regex(.*I.*P.*)
    opcode:
      kcrsa16: 0
    rs1:
      <<: *all_regs
    rs2:
      <<: *all_regs
    rd:
      <<: *all_regs
    op_comb:
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'simd_base_val("rs1", xlen, 16, signed=True)': 0
        'simd_base_val("rs2", xlen, 16, signed=True)': 0
        'simd_val_comb(xlen, 16, signed=True)': 0

ukcrsa16:
    config:
      - check ISA:=regex(.*I.*P.*)
    opcode:
      ukcrsa16: 0
    rs1:
      <<: *all_regs
    rs2:
      <<: *all_regs
    rd:
      <<: *all_regs
    op_comb:
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'simd_base_val("rs1", xlen, 16, signed=False)': 0
        'simd_base_val("rs2", xlen, 16, signed=False)': 0
        'simd_val_comb(xlen, 16, signed=False)': 0

stas16:
    config:
      - check ISA:=regex(.*I.*P.*)
    opcode:
      stas16: 0
    rs1:
      <<: *all_regs
    rs2:
      <<: *all_regs
    rd:
      <<: *all_regs
    op_comb:
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'simd_base_val("rs1", xlen, 16, signed=True)': 0
        'simd_base_val("rs2", xlen, 16, signed=True)': 0
        'simd_base_val("rs1", xlen, 16, signed=False)': 0
        'simd_base_val("rs2", xlen, 16, signed=False)': 0
        'simd_val_comb(xlen, 16, signed=True)': 0
        'simd_val_comb(xlen, 16, signed=False)': 0

rstas16:
    config:
      - check ISA:=regex(.*I.*P.*)
    opcode:
      rstas16: 0
    rs1:
      <<: *all_regs
    rs2:
      <<: *all_regs
    rd:
      <<: *all_regs
    op_comb:
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'simd_base_val("rs1", xlen, 16, signed=True)': 0
        'simd_base_val("rs2", xlen, 16, signed=True)': 0
        'simd_val_comb(xlen, 16, signed=True)': 0

urstas16:
    config:
      - check ISA:=regex(.*I.*P.*)
    opcode:
      urstas16: 0
    rs1:
      <<: *all_regs
    rs2:
      <<: *all_regs
    rd:
      <<: *all_regs
    op_comb:
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'simd_base_val("rs1", xlen, 16, signed=False)': 0
        'simd_base_val("rs2", xlen, 16, signed=False)': 0
        'simd_val_comb(xlen, 16, signed=False)': 0

kstas16:
    config:
      - check ISA:=regex(.*I.*P.*)
    opcode:
      kstas16: 0
    rs1:
      <<: *all_regs
    rs2:
      <<: *all_regs
    rd:
      <<: *all_regs
    op_comb:
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'simd_base_val("rs1", xlen, 16, signed=True)': 0
        'simd_base_val("rs2", xlen, 16, signed=True)': 0
        'simd_val_comb(xlen, 16, signed=True)': 0

ukstas16:
    config:
      - check ISA:=regex(.*I.*P.*)
    opcode:
      ukstas16: 0
    rs1:
      <<: *all_regs
    rs2:
      <<: *all_regs
    rd:
      <<: *all_regs
    op_comb:
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'simd_base_val("rs1", xlen, 16, signed=False)': 0
        'simd_base_val("rs2", xlen, 16, signed=False)': 0
        'simd_val_comb(xlen, 16, signed=False)': 0

stsa16:
    config:
      - check ISA:=regex(.*I.*P.*)
    opcode:
      stsa16: 0
    rs1:
      <<: *all_regs
    rs2:
      <<: *all_regs
    rd:
      <<: *all_regs
    op_comb:
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'simd_base_val("rs1", xlen, 16, signed=True)': 0
        'simd_base_val("rs2", xlen, 16, signed=True)': 0
        'simd_base_val("rs1", xlen, 16, signed=False)': 0
        'simd_base_val("rs2", xlen, 16, signed=False)': 0
        'simd_val_comb(xlen, 16, signed=True)': 0
        'simd_val_comb(xlen, 16, signed=False)': 0

rstsa16:
    config:
      - check ISA:=regex(.*I.*P.*)
    opcode:
      rstsa16: 0
    rs1:
      <<: *all_regs
    rs2:
      <<: *all_regs
    rd:
      <<: *all_regs
    op_comb:
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'simd_base_val("rs1", xlen, 16, signed=True)': 0
        'simd_base_val("rs2", xlen, 16, signed=True)': 0
        'simd_val_comb(xlen, 16, signed=True)': 0

urstsa16:
    config:
      - check ISA:=regex(.*I.*P.*)
    opcode:
      urstsa16: 0
    rs1:
      <<: *all_regs
    rs2:
      <<: *all_regs
    rd:
      <<: *all_regs
    op_comb:
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'simd_base_val("rs1", xlen, 16, signed=False)': 0
        'simd_base_val("rs2", xlen, 16, signed=False)': 0
        'simd_val_comb(xlen, 16, signed=False)': 0

kstsa16:
    config:
      - check ISA:=regex(.*I.*P.*)
    opcode:
      kstsa16: 0
    rs1:
      <<: *all_regs
    rs2:
      <<: *all_regs
    rd:
      <<: *all_regs
    op_comb:
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'simd_base_val("rs1", xlen, 16, signed=True)': 0
        'simd_base_val("rs2", xlen, 16, signed=True)': 0
        'simd_val_comb(xlen, 16, signed=True)': 0

ukstsa16:
    config:
      - check ISA:=regex(.*I.*P.*)
    opcode:
      ukstsa16: 0
    rs1:
      <<: *all_regs
    rs2:
      <<: *all_regs
    rd:
      <<: *all_regs
    op_comb:
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'simd_base_val("rs1", xlen, 16, signed=False)': 0
        'simd_base_val("rs2", xlen, 16, signed=False)': 0
        'simd_val_comb(xlen, 16, signed=False)': 0

add8:
    config: 
      - check ISA:=regex(.*I.*P.*)
    opcode: 
      add8: 0
    rs1: 
      <<: *all_regs
    rs2: 
      <<: *all_regs
    rd: 
      <<: *all_regs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'simd_base_val("rs1", xlen, 8, signed=True)': 0
        'simd_base_val("rs2", xlen, 8, signed=True)': 0
        'simd_base_val("rs1", xlen, 8, signed=False)': 0
        'simd_base_val("rs2", xlen, 8, signed=False)': 0
        'simd_val_comb(xlen, 8, signed=True)': 0
        'simd_val_comb(xlen, 8, signed=False)': 0

radd8:
    config: 
      - check ISA:=regex(.*I.*P.*)
    opcode: 
      radd8: 0
    rs1: 
      <<: *all_regs
    rs2: 
      <<: *all_regs
    rd: 
      <<: *all_regs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'simd_base_val("rs1", xlen, 8, signed=True)': 0
        'simd_base_val("rs2", xlen, 8, signed=True)': 0
        'simd_val_comb(xlen, 8, signed=True)': 0

uradd8:
    config: 
      - check ISA:=regex(.*I.*P.*)
    opcode: 
      uradd8: 0
    rs1: 
      <<: *all_regs
    rs2: 
      <<: *all_regs
    rd: 
      <<: *all_regs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'simd_base_val("rs1", xlen, 8, signed=False)': 0
        'simd_base_val("rs2", xlen, 8, signed=False)': 0
        'simd_val_comb(xlen, 8, signed=False)': 0

kadd8:
    config: 
      - check ISA:=regex(.*I.*P.*)
    opcode: 
      kadd8: 0
    rs1: 
      <<: *all_regs
    rs2: 
      <<: *all_regs
    rd: 
      <<: *all_regs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'simd_base_val("rs1", xlen, 8, signed=True)': 0
        'simd_base_val("rs2", xlen, 8, signed=True)': 0
        'simd_val_comb(xlen, 8, signed=True)': 0

ukadd8:
    config: 
      - check ISA:=regex(.*I.*P.*)
    opcode: 
      ukadd8: 0
    rs1: 
      <<: *all_regs
    rs2: 
      <<: *all_regs
    rd: 
      <<: *all_regs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'simd_base_val("rs1", xlen, 8, signed=False)': 0
        'simd_base_val("rs2", xlen, 8, signed=False)': 0
        'simd_val_comb(xlen, 8, signed=False)': 0

sub8:
    config: 
      - check ISA:=regex(.*I.*P.*)
    opcode: 
      sub8: 0
    rs1: 
      <<: *all_regs
    rs2: 
      <<: *all_regs
    rd: 
      <<: *all_regs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'simd_base_val("rs1", xlen, 8, signed=True)': 0
        'simd_base_val("rs2", xlen, 8, signed=True)': 0
        'simd_base_val("rs1", xlen, 8, signed=False)': 0
        'simd_base_val("rs2", xlen, 8, signed=False)': 0
        'simd_val_comb(xlen, 8, signed=True)': 0
        'simd_val_comb(xlen, 8, signed=False)': 0

rsub8:
    config: 
      - check ISA:=regex(.*I.*P.*)
    opcode: 
      rsub8: 0
    rs1: 
      <<: *all_regs
    rs2: 
      <<: *all_regs
    rd: 
      <<: *all_regs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'simd_base_val("rs1", xlen, 8, signed=True)': 0
        'simd_base_val("rs2", xlen, 8, signed=True)': 0
        'simd_val_comb(xlen, 8, signed=True)': 0

ursub8:
    config: 
      - check ISA:=regex(.*I.*P.*)
    opcode: 
      ursub8: 0
    rs1: 
      <<: *all_regs
    rs2: 
      <<: *all_regs
    rd: 
      <<: *all_regs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'simd_base_val("rs1", xlen, 8, signed=False)': 0
        'simd_base_val("rs2", xlen, 8, signed=False)': 0
        'simd_val_comb(xlen, 8, signed=False)': 0

ksub8:
    config: 
      - check ISA:=regex(.*I.*P.*)
    opcode: 
      ksub8: 0
    rs1: 
      <<: *all_regs
    rs2: 
      <<: *all_regs
    rd: 
      <<: *all_regs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'simd_base_val("rs1", xlen, 8, signed=True)': 0
        'simd_base_val("rs2", xlen, 8, signed=True)': 0
        'simd_val_comb(xlen, 8, signed=True)': 0

uksub8:
    config: 
      - check ISA:=regex(.*I.*P.*)
    opcode: 
      uksub8: 0
    rs1: 
      <<: *all_regs
    rs2: 
      <<: *all_regs
    rd: 
      <<: *all_regs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'simd_base_val("rs1", xlen, 8, signed=False)': 0
        'simd_base_val("rs2", xlen, 8, signed=False)': 0
        'simd_val_comb(xlen, 8, signed=False)': 0

sra16:
    config: 
      - check ISA:=regex(.*I.*P.*)
    opcode: 
      sra16: 0
    rs1: 
      <<: *all_regs
    rs2: 
      <<: *all_regs
    rd: 
      <<: *all_regs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'simd_base_val("rs1", xlen, 16, signed=True)': 0
        'walking_ones("rs2_val", ceil(log(16, 2)), False)': 0
        'walking_zeros("rs2_val", ceil(log(16, 2)), False)': 0
        'alternate("rs2_val", ceil(log(16, 2)), False)': 0

srai16:
    config: 
      - check ISA:=regex(.*I.*P.*)
    opcode: 
      srai16: 0
    rs1: 
      <<: *all_regs
    rd: 
      <<: *all_regs
    op_comb: 
      <<: *ifmt_op_comb
    val_comb:
      abstract_comb: 
        'simd_base_val("rs1", xlen, 16, signed=True)': 0
        'simd_imm_val("imm_val", 4)': 0

sra16.u:
    config: 
      - check ISA:=regex(.*I.*P.*)
    opcode: 
      sra16.u: 0
    rs1: 
      <<: *all_regs
    rs2: 
      <<: *all_regs
    rd: 
      <<: *all_regs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'simd_base_val("rs1", xlen, 16, signed=True)': 0
        'walking_ones("rs2_val", ceil(log(16, 2)), False)': 0
        'walking_zeros("rs2_val", ceil(log(16, 2)), False)': 0
        'alternate("rs2_val", ceil(log(16, 2)), False)': 0

srai16.u:
    config: 
      - check ISA:=regex(.*I.*P.*)
    opcode: 
      srai16.u: 0
    rs1: 
      <<: *all_regs
    rd: 
      <<: *all_regs
    op_comb: 
      <<: *ifmt_op_comb
    val_comb:
      abstract_comb: 
        'simd_base_val("rs1", xlen, 16, signed=True)': 0
        'simd_imm_val("imm_val", 4)': 0

srl16:
    config: 
      - check ISA:=regex(.*I.*P.*)
    opcode: 
      srl16: 0
    rs1: 
      <<: *all_regs
    rs2: 
      <<: *all_regs
    rd: 
      <<: *all_regs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'simd_base_val("rs1", xlen, 16, signed=False)': 0
        'walking_ones("rs2_val", ceil(log(16, 2)), False)': 0
        'walking_zeros("rs2_val", ceil(log(16, 2)), False)': 0
        'alternate("rs2_val", ceil(log(16, 2)), False)': 0

srli16:
    config: 
      - check ISA:=regex(.*I.*P.*)
    opcode: 
      srli16: 0
    rs1: 
      <<: *all_regs
    rd: 
      <<: *all_regs
    op_comb: 
      <<: *ifmt_op_comb
    val_comb:
      abstract_comb: 
        'simd_base_val("rs1", xlen, 16, signed=False)': 0
        'simd_imm_val("imm_val", 4)': 0

srl16.u:
    config: 
      - check ISA:=regex(.*I.*P.*)
    opcode: 
      srl16.u: 0
    rs1: 
      <<: *all_regs
    rs2: 
      <<: *all_regs
    rd: 
      <<: *all_regs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'simd_base_val("rs1", xlen, 16, signed=False)': 0
        'walking_ones("rs2_val", ceil(log(16, 2)), False)': 0
        'walking_zeros("rs2_val", ceil(log(16, 2)), False)': 0
        'alternate("rs2_val", ceil(log(16, 2)), False)': 0

srli16.u:
    config: 
      - check ISA:=regex(.*I.*P.*)
    opcode: 
      srli16.u: 0
    rs1: 
      <<: *all_regs
    rd: 
      <<: *all_regs
    op_comb: 
      <<: *ifmt_op_comb
    val_comb:
      abstract_comb: 
        'simd_base_val("rs1", xlen, 16, signed=False)': 0
        'simd_imm_val("imm_val", 4)': 0

sll16:
    config: 
      - check ISA:=regex(.*I.*P.*)
    opcode: 
      sll16: 0
    rs1: 
      <<: *all_regs
    rs2: 
      <<: *all_regs
    rd: 
      <<: *all_regs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'simd_base_val("rs1", xlen, 16, signed=False)': 0
        'walking_ones("rs2_val", ceil(log(16, 2)), False)': 0
        'walking_zeros("rs2_val", ceil(log(16, 2)), False)': 0
        'alternate("rs2_val", ceil(log(16, 2)), False)': 0

slli16:
    config: 
      - check ISA:=regex(.*I.*P.*)
    opcode: 
      slli16: 0
    rs1: 
      <<: *all_regs
    rd: 
      <<: *all_regs
    op_comb: 
      <<: *ifmt_op_comb
    val_comb:
      abstract_comb: 
        'simd_base_val("rs1", xlen, 16, signed=False)': 0
        'simd_imm_val("imm_val", 4)': 0

ksll16:
    config: 
      - check ISA:=regex(.*I.*P.*)
    opcode: 
      ksll16: 0
    rs1: 
      <<: *all_regs
    rs2: 
      <<: *all_regs
    rd: 
      <<: *all_regs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'simd_base_val("rs1", xlen, 16, signed=True)': 0
        'walking_ones("rs2_val", ceil(log(16, 2)), False)': 0
        'walking_zeros("rs2_val", ceil(log(16, 2)), False)': 0
        'alternate("rs2_val", ceil(log(16, 2)), False)': 0

kslli16:
    config: 
      - check ISA:=regex(.*I.*P.*)
    opcode: 
      kslli16: 0
    rs1: 
      <<: *all_regs
    rd: 
      <<: *all_regs
    op_comb: 
      <<: *ifmt_op_comb
    val_comb:
      abstract_comb: 
        'simd_base_val("rs1", xlen, 16, signed=True)': 0
        'simd_imm_val("imm_val", 4)': 0

kslra16:
    config: 
      - check isa:=regex(.*i.*p.*)
    opcode: 
      kslra16: 0
    rs1: 
      <<: *all_regs
    rs2: 
      <<: *all_regs
    rd: 
      <<: *all_regs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'simd_base_val("rs1", xlen, 16, signed=True)': 0
        'walking_ones("rs2_val", ceil(log(16, 2)), True)': 0
        'walking_zeros("rs2_val", ceil(log(16, 2)), True)': 0
        'alternate("rs2_val", ceil(log(16, 2)), True)': 0

kslra16.u:
    config: 
      - check isa:=regex(.*i.*p.*)
    opcode: 
      kslra16.u: 0
    rs1: 
      <<: *all_regs
    rs2: 
      <<: *all_regs
    rd: 
      <<: *all_regs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'simd_base_val("rs1", xlen, 16, signed=True)': 0
        'walking_ones("rs2_val", ceil(log(16, 2)), True)': 0
        'walking_zeros("rs2_val", ceil(log(16, 2)), True)': 0
        'alternate("rs2_val", ceil(log(16, 2)), True)': 0

sra8:
    config: 
      - check ISA:=regex(.*I.*P.*)
    opcode: 
      sra8: 0
    rs1: 
      <<: *all_regs
    rs2: 
      <<: *all_regs
    rd: 
      <<: *all_regs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'simd_base_val("rs1", xlen, 8, signed=True)': 0
        'walking_ones("rs2_val", ceil(log(8, 2)), False)': 0
        'walking_zeros("rs2_val", ceil(log(8, 2)), False)': 0
        'alternate("rs2_val", ceil(log(8, 2)), False)': 0

srai8:
    config: 
      - check ISA:=regex(.*I.*P.*)
    opcode: 
      srai8: 0
    rs1: 
      <<: *all_regs
    rd: 
      <<: *all_regs
    op_comb: 
      <<: *ifmt_op_comb
    val_comb:
      abstract_comb: 
        'simd_base_val("rs1", xlen, 8, signed=True)': 0
        'simd_imm_val("imm_val", 3)': 0

sra8.u:
    config: 
      - check ISA:=regex(.*I.*P.*)
    opcode: 
      sra8.u: 0
    rs1: 
      <<: *all_regs
    rs2: 
      <<: *all_regs
    rd: 
      <<: *all_regs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'simd_base_val("rs1", xlen, 8, signed=True)': 0
        'walking_ones("rs2_val", ceil(log(8, 2)), False)': 0
        'walking_zeros("rs2_val", ceil(log(8, 2)), False)': 0
        'alternate("rs2_val", ceil(log(8, 2)), False)': 0

srai8.u:
    config: 
      - check ISA:=regex(.*I.*P.*)
    opcode: 
      srai8.u: 0
    rs1: 
      <<: *all_regs
    rd: 
      <<: *all_regs
    op_comb: 
      <<: *ifmt_op_comb
    val_comb:
      abstract_comb: 
        'simd_base_val("rs1", xlen, 8, signed=True)': 0
        'simd_imm_val("imm_val", 3)': 0

srl8:
    config: 
      - check ISA:=regex(.*I.*P.*)
    opcode: 
      srl8: 0
    rs1: 
      <<: *all_regs
    rs2: 
      <<: *all_regs
    rd: 
      <<: *all_regs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'simd_base_val("rs1", xlen, 8, signed=False)': 0
        'walking_ones("rs2_val", ceil(log(8, 2)), False)': 0
        'walking_zeros("rs2_val", ceil(log(8, 2)), False)': 0
        'alternate("rs2_val", ceil(log(8, 2)), False)': 0

srli8:
    config: 
      - check ISA:=regex(.*I.*P.*)
    opcode: 
      srli8: 0
    rs1: 
      <<: *all_regs
    rd: 
      <<: *all_regs
    op_comb: 
      <<: *ifmt_op_comb
    val_comb:
      abstract_comb: 
        'simd_base_val("rs1", xlen, 8, signed=False)': 0
        'simd_imm_val("imm_val", 3)': 0

srl8.u:
    config: 
      - check ISA:=regex(.*I.*P.*)
    opcode: 
      srl8.u: 0
    rs1: 
      <<: *all_regs
    rs2: 
      <<: *all_regs
    rd: 
      <<: *all_regs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'simd_base_val("rs1", xlen, 8, signed=False)': 0
        'walking_ones("rs2_val", ceil(log(8, 2)), False)': 0
        'walking_zeros("rs2_val", ceil(log(8, 2)), False)': 0
        'alternate("rs2_val", ceil(log(8, 2)), False)': 0

srli8.u:
    config: 
      - check ISA:=regex(.*I.*P.*)
    opcode: 
      srli8.u: 0
    rs1: 
      <<: *all_regs
    rd: 
      <<: *all_regs
    op_comb: 
      <<: *ifmt_op_comb
    val_comb:
      abstract_comb: 
        'simd_base_val("rs1", xlen, 8, signed=False)': 0
        'simd_imm_val("imm_val", 3)': 0

sll8:
    config: 
      - check ISA:=regex(.*I.*P.*)
    opcode: 
      sll8: 0
    rs1: 
      <<: *all_regs
    rs2: 
      <<: *all_regs
    rd: 
      <<: *all_regs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'simd_base_val("rs1", xlen, 8, signed=False)': 0
        'walking_ones("rs2_val", ceil(log(8, 2)), False)': 0
        'walking_zeros("rs2_val", ceil(log(8, 2)), False)': 0
        'alternate("rs2_val", ceil(log(8, 2)), False)': 0

slli8:
    config: 
      - check ISA:=regex(.*I.*P.*)
    opcode: 
      slli8: 0
    rs1: 
      <<: *all_regs
    rd: 
      <<: *all_regs
    op_comb: 
      <<: *ifmt_op_comb
    val_comb:
      abstract_comb: 
        'simd_base_val("rs1", xlen, 8, signed=False)': 0
        'simd_imm_val("imm_val", 3)': 0

ksll8:
    config: 
      - check ISA:=regex(.*I.*P.*)
    opcode: 
      ksll8: 0
    rs1: 
      <<: *all_regs
    rs2: 
      <<: *all_regs
    rd: 
      <<: *all_regs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'simd_base_val("rs1", xlen, 8, signed=True)': 0
        'walking_ones("rs2_val", ceil(log(8, 2)), False)': 0
        'walking_zeros("rs2_val", ceil(log(8, 2)), False)': 0
        'alternate("rs2_val", ceil(log(8, 2)), False)': 0

kslli8:
    config: 
      - check ISA:=regex(.*I.*P.*)
    opcode: 
      kslli8: 0
    rs1: 
      <<: *all_regs
    rd: 
      <<: *all_regs
    op_comb: 
      <<: *ifmt_op_comb
    val_comb:
      abstract_comb: 
        'simd_base_val("rs1", xlen, 8, signed=True)': 0
        'simd_imm_val("imm_val", 3)': 0

kslra8:
    config: 
      - check isa:=regex(.*i.*p.*)
    opcode: 
      kslra8: 0
    rs1: 
      <<: *all_regs
    rs2: 
      <<: *all_regs
    rd: 
      <<: *all_regs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'simd_base_val("rs1", xlen, 8, signed=True)': 0
        'walking_ones("rs2_val", ceil(log(8, 2)), True)': 0
        'walking_zeros("rs2_val", ceil(log(8, 2)), True)': 0
        'alternate("rs2_val", ceil(log(8, 2)), True)': 0

kslra8.u:
    config: 
      - check isa:=regex(.*i.*p.*)
    opcode: 
      kslra8.u: 0
    rs1: 
      <<: *all_regs
    rs2: 
      <<: *all_regs
    rd: 
      <<: *all_regs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'simd_base_val("rs1", xlen, 8, signed=True)': 0
        'walking_ones("rs2_val", ceil(log(8, 2)), True)': 0
        'walking_zeros("rs2_val", ceil(log(8, 2)), True)': 0
        'alternate("rs2_val", ceil(log(8, 2)), True)': 0

cmpeq16:
    config: 
      - check ISA:=regex(.*I.*P.*)
    opcode: 
      cmpeq16: 0
    rs1: 
      <<: *all_regs
    rs2: 
      <<: *all_regs
    rd: 
      <<: *all_regs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'simd_base_val("rs1", xlen, 16, signed=True)': 0
        'simd_base_val("rs2", xlen, 16, signed=True)': 0
        'simd_base_val("rs1", xlen, 16, signed=False)': 0
        'simd_base_val("rs2", xlen, 16, signed=False)': 0
        'simd_val_comb(xlen, 16, signed=True)': 0
        'simd_val_comb(xlen, 16, signed=False)': 0

scmplt16:
    config:
      - check ISA:=regex(.*I.*P.*)
    opcode:
      scmplt16: 0
    rs1:
      <<: *all_regs
    rs2:
      <<: *all_regs
    rd:
      <<: *all_regs
    op_comb:
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'simd_base_val("rs1", xlen, 16, signed=True)': 0
        'simd_base_val("rs2", xlen, 16, signed=True)': 0
        'simd_val_comb(xlen, 16, signed=True)': 0

scmple16:
    config:
      - check ISA:=regex(.*I.*P.*)
    opcode:
      scmple16: 0
    rs1:
      <<: *all_regs
    rs2:
      <<: *all_regs
    rd:
      <<: *all_regs
    op_comb:
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'simd_base_val("rs1", xlen, 16, signed=True)': 0
        'simd_base_val("rs2", xlen, 16, signed=True)': 0
        'simd_val_comb(xlen, 16, signed=True)': 0

ucmplt16:
    config:
      - check ISA:=regex(.*I.*P.*)
    opcode:
      ucmplt16: 0
    rs1:
      <<: *all_regs
    rs2:
      <<: *all_regs
    rd:
      <<: *all_regs
    op_comb:
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'simd_base_val("rs1", xlen, 16, signed=False)': 0
        'simd_base_val("rs2", xlen, 16, signed=False)': 0
        'simd_val_comb(xlen, 16, signed=False)': 0

ucmple16:
    config:
      - check ISA:=regex(.*I.*P.*)
    opcode:
      ucmple16: 0
    rs1:
      <<: *all_regs
    rs2:
      <<: *all_regs
    rd:
      <<: *all_regs
    op_comb:
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'simd_base_val("rs1", xlen, 16, signed=False)': 0
        'simd_base_val("rs2", xlen, 16, signed=False)': 0
        'simd_val_comb(xlen, 16, signed=False)': 0

cmpeq8:
    config: 
      - check ISA:=regex(.*I.*P.*)
    opcode: 
      cmpeq8: 0
    rs1: 
      <<: *all_regs
    rs2: 
      <<: *all_regs
    rd: 
      <<: *all_regs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'simd_base_val("rs1", xlen, 8, signed=True)': 0
        'simd_base_val("rs2", xlen, 8, signed=True)': 0
        'simd_base_val("rs1", xlen, 8, signed=False)': 0
        'simd_base_val("rs2", xlen, 8, signed=False)': 0
        'simd_val_comb(xlen, 8, signed=True)': 0
        'simd_val_comb(xlen, 8, signed=False)': 0

scmplt8:
    config: 
      - check ISA:=regex(.*I.*P.*)
    opcode: 
      scmplt8: 0
    rs1: 
      <<: *all_regs
    rs2: 
      <<: *all_regs
    rd: 
      <<: *all_regs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'simd_base_val("rs1", xlen, 8, signed=True)': 0
        'simd_base_val("rs2", xlen, 8, signed=True)': 0
        'simd_val_comb(xlen, 8, signed=True)': 0

scmple8:
    config: 
      - check ISA:=regex(.*I.*P.*)
    opcode: 
      scmple8: 0
    rs1: 
      <<: *all_regs
    rs2: 
      <<: *all_regs
    rd: 
      <<: *all_regs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'simd_base_val("rs1", xlen, 8, signed=True)': 0
        'simd_base_val("rs2", xlen, 8, signed=True)': 0
        'simd_val_comb(xlen, 8, signed=True)': 0

ucmplt8:
    config: 
      - check ISA:=regex(.*I.*P.*)
    opcode: 
      ucmplt8: 0
    rs1: 
      <<: *all_regs
    rs2: 
      <<: *all_regs
    rd: 
      <<: *all_regs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'simd_base_val("rs1", xlen, 8, signed=False)': 0
        'simd_base_val("rs2", xlen, 8, signed=False)': 0
        'simd_val_comb(xlen, 8, signed=False)': 0

ucmple8:
    config: 
      - check ISA:=regex(.*I.*P.*)
    opcode: 
      ucmple8: 0
    rs1: 
      <<: *all_regs
    rs2: 
      <<: *all_regs
    rd: 
      <<: *all_regs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'simd_base_val("rs1", xlen, 8, signed=False)': 0
        'simd_base_val("rs2", xlen, 8, signed=False)': 0
        'simd_val_comb(xlen, 8, signed=False)': 0

smul16:
    config: 
      - check ISA:=regex(.*I.*P.*)
    opcode: 
      smul16: 0
    rs1: 
      <<: *all_regs
    rs2: 
      <<: *all_regs
    rd: 
      <<: *all_regs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'simd_base_val("rs1", xlen, 16, signed=True)': 0
        'simd_base_val("rs2", xlen, 16, signed=True)': 0
        'simd_val_comb(xlen, 16, signed=True)': 0

smulx16:
    config: 
      - check ISA:=regex(.*I.*P.*)
    opcode: 
      smulx16: 0
    rs1: 
      <<: *all_regs
    rs2: 
      <<: *all_regs
    rd: 
      <<: *all_regs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'simd_base_val("rs1", xlen, 16, signed=True)': 0
        'simd_base_val("rs2", xlen, 16, signed=True)': 0
        'simd_val_comb(xlen, 16, signed=True)': 0

umul16:
    config: 
      - check ISA:=regex(.*I.*P.*)
    opcode: 
      umul16: 0
    rs1: 
      <<: *all_regs
    rs2: 
      <<: *all_regs
    rd: 
      <<: *all_regs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'simd_base_val("rs1", xlen, 16, signed=False)': 0
        'simd_base_val("rs2", xlen, 16, signed=False)': 0
        'simd_val_comb(xlen, 16, signed=False)': 0

umulx16:
    config: 
      - check ISA:=regex(.*I.*P.*)
    opcode: 
      umulx16: 0
    rs1: 
      <<: *all_regs
    rs2: 
      <<: *all_regs
    rd: 
      <<: *all_regs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'simd_base_val("rs1", xlen, 16, signed=False)': 0
        'simd_base_val("rs2", xlen, 16, signed=False)': 0
        'simd_val_comb(xlen, 16, signed=False)': 0

khm16:
    config: 
      - check ISA:=regex(.*I.*P.*)
    opcode: 
      khm16: 0
    rs1: 
      <<: *all_regs
    rs2: 
      <<: *all_regs
    rd: 
      <<: *all_regs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'simd_base_val("rs1", xlen, 16, signed=True)': 0
        'simd_base_val("rs2", xlen, 16, signed=True)': 0
        'simd_val_comb(xlen, 16, signed=True)': 0

khmx16:
    config: 
      - check ISA:=regex(.*I.*P.*)
    opcode: 
      khmx16: 0
    rs1: 
      <<: *all_regs
    rs2: 
      <<: *all_regs
    rd: 
      <<: *all_regs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'simd_base_val("rs1", xlen, 16, signed=True)': 0
        'simd_base_val("rs2", xlen, 16, signed=True)': 0
        'simd_val_comb(xlen, 16, signed=True)': 0

smul8:
    config: 
      - check ISA:=regex(.*I.*P.*)
    opcode: 
      smul8: 0
    rs1: 
      <<: *all_regs
    rs2: 
      <<: *all_regs
    rd: 
      <<: *all_regs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'simd_base_val("rs1", xlen, 8, signed=True)': 0
        'simd_base_val("rs2", xlen, 8, signed=True)': 0
        'simd_val_comb(xlen, 8, signed=True)': 0

smulx8:
    config: 
      - check ISA:=regex(.*I.*P.*)
    opcode: 
      smulx8: 0
    rs1: 
      <<: *all_regs
    rs2: 
      <<: *all_regs
    rd: 
      <<: *all_regs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'simd_base_val("rs1", xlen, 8, signed=True)': 0
        'simd_base_val("rs2", xlen, 8, signed=True)': 0
        'simd_val_comb(xlen, 8, signed=True)': 0

umul8:
    config: 
      - check ISA:=regex(.*I.*P.*)
    opcode: 
      umul8: 0
    rs1: 
      <<: *all_regs
    rs2: 
      <<: *all_regs
    rd: 
      <<: *all_regs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'simd_base_val("rs1", xlen, 8, signed=False)': 0
        'simd_base_val("rs2", xlen, 8, signed=False)': 0
        'simd_val_comb(xlen, 8, signed=False)': 0

umulx8:
    config: 
      - check ISA:=regex(.*I.*P.*)
    opcode: 
      umulx8: 0
    rs1: 
      <<: *all_regs
    rs2: 
      <<: *all_regs
    rd: 
      <<: *all_regs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'simd_base_val("rs1", xlen, 8, signed=False)': 0
        'simd_base_val("rs2", xlen, 8, signed=False)': 0
        'simd_val_comb(xlen, 8, signed=False)': 0

khm8:
    config: 
      - check ISA:=regex(.*I.*P.*)
    opcode: 
      khm8: 0
    rs1: 
      <<: *all_regs
    rs2: 
      <<: *all_regs
    rd: 
      <<: *all_regs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'simd_base_val("rs1", xlen, 8, signed=True)': 0
        'simd_base_val("rs2", xlen, 8, signed=True)': 0
        'simd_val_comb(xlen, 8, signed=True)': 0

khmx8:
    config: 
      - check ISA:=regex(.*I.*P.*)
    opcode: 
      khmx8: 0
    rs1: 
      <<: *all_regs
    rs2: 
      <<: *all_regs
    rd: 
      <<: *all_regs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'simd_base_val("rs1", xlen, 8, signed=True)': 0
        'simd_base_val("rs2", xlen, 8, signed=True)': 0
        'simd_val_comb(xlen, 8, signed=True)': 0

smin16:
    config: 
      - check ISA:=regex(.*I.*P.*)
    opcode: 
      smin16: 0
    rs1: 
      <<: *all_regs
    rs2: 
      <<: *all_regs
    rd: 
      <<: *all_regs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'simd_base_val("rs1", xlen, 16, signed=True)': 0
        'simd_base_val("rs2", xlen, 16, signed=True)': 0
        'simd_val_comb(xlen, 16, signed=True)': 0

umin16:
    config: 
      - check ISA:=regex(.*I.*P.*)
    opcode: 
      umin16: 0
    rs1: 
      <<: *all_regs
    rs2: 
      <<: *all_regs
    rd: 
      <<: *all_regs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'simd_base_val("rs1", xlen, 16, signed=False)': 0
        'simd_base_val("rs2", xlen, 16, signed=False)': 0
        'simd_val_comb(xlen, 16, signed=False)': 0

smax16:
    config: 
      - check ISA:=regex(.*I.*P.*)
    opcode: 
      smax16: 0
    rs1: 
      <<: *all_regs
    rs2: 
      <<: *all_regs
    rd: 
      <<: *all_regs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'simd_base_val("rs1", xlen, 16, signed=True)': 0
        'simd_base_val("rs2", xlen, 16, signed=True)': 0
        'simd_val_comb(xlen, 16, signed=True)': 0

umax16:
    config: 
      - check ISA:=regex(.*I.*P.*)
    opcode: 
      umax16: 0
    rs1: 
      <<: *all_regs
    rs2: 
      <<: *all_regs
    rd: 
      <<: *all_regs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'simd_base_val("rs1", xlen, 16, signed=False)': 0
        'simd_base_val("rs2", xlen, 16, signed=False)': 0
        'simd_val_comb(xlen, 16, signed=False)': 0

sclip16:
    config: 
      - check ISA:=regex(.*I.*P.*)
    opcode: 
      sclip16: 0
    rs1: 
      <<: *all_regs
    rd: 
      <<: *all_regs
    op_comb: 
      <<: *ifmt_op_comb
    val_comb:
      abstract_comb: 
        'simd_base_val("rs1", xlen, 16, signed=True)': 0
        'simd_imm_val("imm_val", 4)': 0

uclip16:
    config: 
      - check ISA:=regex(.*I.*P.*)
    opcode: 
      uclip16: 0
    rs1: 
      <<: *all_regs
    rd: 
      <<: *all_regs
    op_comb: 
      <<: *ifmt_op_comb
    val_comb:
      abstract_comb: 
        'simd_base_val("rs1", xlen, 16, signed=False)': 0
        'simd_imm_val("imm_val", 4)': 0

kabs16:
    config: 
      - check ISA:=regex(.*I.*P.*)
    opcode: 
      kabs16: 0
    rs1: 
      <<: *all_regs
    rd: 
      <<: *all_regs
    val_comb:
      abstract_comb:
        'simd_base_val("rs1", xlen, 16, signed=True)': 0

clrs16:
    config: 
      - check ISA:=regex(.*I.*P.*)
    opcode: 
      clrs16: 0
    rs1: 
      <<: *all_regs
    rd: 
      <<: *all_regs
    val_comb:
      abstract_comb:
        'simd_base_val("rs1", xlen, 16, signed=True)': 0

clz16:
    config: 
      - check ISA:=regex(.*I.*P.*)
    opcode: 
      clz16: 0
    rs1: 
      <<: *all_regs
    rd: 
      <<: *all_regs
    val_comb:
      abstract_comb:
        'simd_base_val("rs1", xlen, 16, signed=False)': 0

clo16:
    config: 
      - check ISA:=regex(.*I.*P.*)
    opcode: 
      clo16: 0
    rs1: 
      <<: *all_regs
    rd: 
      <<: *all_regs
    val_comb:
      abstract_comb:
        'simd_base_val("rs1", xlen, 16, signed=False)': 0

swap16:
    config: 
      - check ISA:=regex(.*I.*P.*)
    opcode: 
      swap16: 0
    rs1: 
      <<: *all_regs
    rd: 
      <<: *all_regs
    val_comb:
      abstract_comb:
        'simd_base_val("rs1", xlen, 16, signed=False)': 0

sclip8:
    config: 
      - check ISA:=regex(.*I.*P.*)
    opcode: 
      sclip8: 0
    rs1: 
      <<: *all_regs
    rd: 
      <<: *all_regs
    op_comb: 
      <<: *ifmt_op_comb
    val_comb:
      abstract_comb: 
        'simd_base_val("rs1", xlen, 8, signed=True)': 0
        'simd_imm_val("imm_val", 3)': 0

