# For Licence details look at https://gitlab.com/incoresemi/riscv-compliance/riscv_ctg/-/blob/master/LICENSE.incore

d_fsub_b1:
    config: 
      - check ISA:=regex(.*I.*D.*)
    opcode: 
      fsub.d: 0
    rs1: 
      <<: *all_fregs
    rs2:
      <<: *all_fregs
    rd: 
      <<: *all_fregs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'ibm_b1(64, "fsub.d", 2)': 0
        
d_fsub_b2:
    config: 
      - check ISA:=regex(.*I.*D.*)
    opcode: 
      fsub.d: 0
    rs1: 
      <<: *all_fregs
    rs2:
      <<: *all_fregs
    rd: 
      <<: *all_fregs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'ibm_b2(64, "fsub.d", 2)': 0
        
d_fsub_b3:
    config: 
      - check ISA:=regex(.*I.*D.*)
    opcode: 
      fsub.d: 0
    rs1: 
      <<: *all_fregs
    rs2:
      <<: *all_fregs
    rd: 
      <<: *all_fregs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'ibm_b3(64, "fsub.d", 2)': 0
        
d_fsub_b4:
    config: 
      - check ISA:=regex(.*I.*D.*)
    opcode: 
      fsub.d: 0
    rs1: 
      <<: *all_fregs
    rs2:
      <<: *all_fregs
    rd: 
      <<: *all_fregs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'ibm_b4(64, "fsub.d", 2)': 0
        
d_fsub_b5:
    config: 
      - check ISA:=regex(.*I.*D.*)
    opcode: 
      fsub.d: 0
    rs1: 
      <<: *all_fregs
    rs2:
      <<: *all_fregs
    rd: 
      <<: *all_fregs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'ibm_b5(64, "fsub.d", 2)': 0
        
d_fsub_b7:
    config: 
      - check ISA:=regex(.*I.*D.*)
    opcode: 
      fsub.d: 0
    rs1: 
      <<: *all_fregs
    rs2:
      <<: *all_fregs
    rd: 
      <<: *all_fregs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'ibm_b7(64, "fsub.d", 2)': 0
        
d_fsub_b8:
    config: 
      - check ISA:=regex(.*I.*D.*)
    opcode: 
      fsub.d: 0
    rs1: 
      <<: *all_fregs
    rs2:
      <<: *all_fregs
    rd: 
      <<: *all_fregs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'ibm_b8(64, "fsub.d", 2)': 0
        
d_fsub_b10:
    config: 
      - check ISA:=regex(.*I.*D.*)
    opcode: 
      fsub.d: 0
    rs1: 
      <<: *all_fregs
    rs2:
      <<: *all_fregs
    rd: 
      <<: *all_fregs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'ibm_b10(64, "fsub.d", 2)': 0
        
d_fsub_b11:
    config: 
      - check ISA:=regex(.*I.*D.*)
    opcode: 
      fsub.d: 0
    rs1: 
      <<: *all_fregs
    rs2:
      <<: *all_fregs
    rd: 
      <<: *all_fregs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'ibm_b11(64, "fsub.d", 2)': 0
        
d_fsub_b12:
    config: 
      - check ISA:=regex(.*I.*D.*)
    opcode: 
      fsub.d: 0
    rs1: 
      <<: *all_fregs
    rs2:
      <<: *all_fregs
    rd: 
      <<: *all_fregs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'ibm_b12(64, "fsub.d", 2)': 0
        
d_fsub_b13:
    config: 
      - check ISA:=regex(.*I.*D.*)
    opcode: 
      fsub.d: 0
    rs1: 
      <<: *all_fregs
    rs2:
      <<: *all_fregs
    rd: 
      <<: *all_fregs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      abstract_comb:
        'ibm_b13(64, "fsub.d", 2)': 0
