
#include "compliance_model.h"
#include "compliance_test.h"

RVTEST_ISA("RV32I")

RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1
RVTEST_CASE(1,"//check ISA:=regex(.*I.*);def TEST_CASE_1=True;",slli)
la x1,signature_x1_1
TEST_IMM_OP( slli, x31, x31, -36028801313931264, -16777217, 31, x1, 0, x2)
TEST_IMM_OP( slli, x30, x29, 2305843004918726656, 1073741823, 31, x1, 4, x2)
TEST_IMM_OP( slli, x29, x30, -2164260865, -16777217, 0, x1, 8, x2)
TEST_IMM_OP( slli, x28, x27, 1073741823, 1073741823, 0, x1, 12, x2)
TEST_IMM_OP( slli, x27, x28, 1048576, 16, 16, x1, 16, x2)
TEST_IMM_OP( slli, x26, x25, -4611686018427387904, -2147483648, 31, x1, 20, x2)
TEST_IMM_OP( slli, x25, x26, 0, 0, 31, x1, 24, x2)
TEST_IMM_OP( slli, x24, x23, 4611686014132420608, 2147483647, 31, x1, 28, x2)
TEST_IMM_OP( slli, x23, x24, 0, 1, 31, x1, 32, x2)
TEST_IMM_OP( slli, x22, x21, -2181038082, -16777217, 1, x1, 36, x2)
TEST_IMM_OP( slli, x21, x22, -2214592516, -16777217, 2, x1, 40, x2)
TEST_IMM_OP( slli, x20, x19, -2415919120, -16777217, 4, x1, 44, x2)
TEST_IMM_OP( slli, x19, x20, -6442451200, -16777217, 8, x1, 48, x2)
TEST_IMM_OP( slli, x18, x17, -18014401730707456, -16777217, 30, x1, 52, x2)
TEST_IMM_OP( slli, x17, x18, -9007201939095552, -16777217, 29, x1, 56, x2)
TEST_IMM_OP( slli, x16, x15, -2251802095386624, -16777217, 27, x1, 60, x2)
TEST_IMM_OP( slli, x15, x16, -140739644227584, -16777217, 23, x1, 64, x2)
TEST_IMM_OP( slli, x14, x13, -551903330304, -16777217, 15, x1, 68, x2)
TEST_IMM_OP( slli, x13, x14, -35186521669632, -16777217, 21, x1, 72, x2)
TEST_IMM_OP( slli, x12, x11, -19327353856, -16777217, 10, x1, 76, x2)
TEST_IMM_OP( slli, x11, x12, 4294967296, 2, 31, x1, 80, x2)
TEST_IMM_OP( slli, x10, x9, 8589934592, 4, 31, x1, 84, x2)
TEST_IMM_OP( slli, x9, x10, 17179869184, 8, 31, x1, 88, x2)
TEST_IMM_OP( slli, x8, x7, 68719476736, 32, 31, x1, 92, x2)
TEST_IMM_OP( slli, x7, x8, 137438953472, 64, 31, x1, 96, x2)
TEST_IMM_OP( slli, x6, x5, 274877906944, 128, 31, x1, 100, x2)
TEST_IMM_OP( slli, x5, x6, 549755813888, 256, 31, x1, 104, x7)
TEST_IMM_OP( slli, x4, x3, 1099511627776, 512, 31, x1, 108, x7)
la x5,signature_x5_0
TEST_IMM_OP( slli, x3, x4, 2199023255552, 1024, 31, x5, 0, x7)
TEST_IMM_OP( slli, x2, x1, 4398046511104, 2048, 31, x5, 4, x7)
TEST_IMM_OP( slli, x1, x2, 8796093022208, 4096, 31, x5, 8, x7)
TEST_IMM_OP( slli, x31, x0, 17592186044416, 8192, 31, x5, 12, x7)
TEST_IMM_OP( slli, x0, x31, 35184372088832, 16384, 31, x5, 16, x7)
TEST_IMM_OP( slli, x11, x10, 70368744177664, 32768, 31, x5, 20, x7)
TEST_IMM_OP( slli, x11, x10, 140737488355328, 65536, 31, x5, 24, x7)
TEST_IMM_OP( slli, x11, x10, 281474976710656, 131072, 31, x5, 28, x7)
TEST_IMM_OP( slli, x11, x10, 562949953421312, 262144, 31, x5, 32, x7)
TEST_IMM_OP( slli, x11, x10, 1125899906842624, 524288, 31, x5, 36, x7)
TEST_IMM_OP( slli, x11, x10, 2251799813685248, 1048576, 31, x5, 40, x7)
TEST_IMM_OP( slli, x11, x10, 4503599627370496, 2097152, 31, x5, 44, x7)
TEST_IMM_OP( slli, x11, x10, 9007199254740992, 4194304, 31, x5, 48, x7)
TEST_IMM_OP( slli, x11, x10, 18014398509481984, 8388608, 31, x5, 52, x7)
TEST_IMM_OP( slli, x11, x10, 36028797018963968, 16777216, 31, x5, 56, x7)
TEST_IMM_OP( slli, x11, x10, 72057594037927936, 33554432, 31, x5, 60, x7)
TEST_IMM_OP( slli, x11, x10, 144115188075855872, 67108864, 31, x5, 64, x7)
TEST_IMM_OP( slli, x11, x10, 288230376151711744, 134217728, 31, x5, 68, x7)
TEST_IMM_OP( slli, x11, x10, 576460752303423488, 268435456, 31, x5, 72, x7)
TEST_IMM_OP( slli, x11, x10, 1152921504606846976, 536870912, 31, x5, 76, x7)
TEST_IMM_OP( slli, x11, x10, 2305843009213693952, 1073741824, 31, x5, 80, x7)
TEST_IMM_OP( slli, x11, x10, -4294967296, -2, 31, x5, 84, x7)
TEST_IMM_OP( slli, x11, x10, -1103806595072, -513, 31, x5, 88, x7)
TEST_IMM_OP( slli, x11, x10, -2203318222848, -1025, 31, x5, 92, x7)
TEST_IMM_OP( slli, x11, x10, -4402341478400, -2049, 31, x5, 96, x7)
TEST_IMM_OP( slli, x11, x10, -8800387989504, -4097, 31, x5, 100, x7)
TEST_IMM_OP( slli, x11, x10, -17596481011712, -8193, 31, x5, 104, x7)
TEST_IMM_OP( slli, x11, x10, -35188667056128, -16385, 31, x5, 108, x7)
TEST_IMM_OP( slli, x11, x10, -70373039144960, -32769, 31, x5, 112, x7)
TEST_IMM_OP( slli, x11, x10, -140741783322624, -65537, 31, x5, 116, x7)
TEST_IMM_OP( slli, x11, x10, -281479271677952, -131073, 31, x5, 120, x7)
TEST_IMM_OP( slli, x11, x10, -562954248388608, -262145, 31, x5, 124, x7)
TEST_IMM_OP( slli, x11, x10, -1125904201809920, -524289, 31, x5, 128, x7)
TEST_IMM_OP( slli, x11, x10, -2251804108652544, -1048577, 31, x5, 132, x7)
TEST_IMM_OP( slli, x11, x10, -4503603922337792, -2097153, 31, x5, 136, x7)
TEST_IMM_OP( slli, x11, x10, -9007203549708288, -4194305, 31, x5, 140, x7)
TEST_IMM_OP( slli, x11, x10, -18014402804449280, -8388609, 31, x5, 144, x7)
TEST_IMM_OP( slli, x11, x10, -72057598332895232, -33554433, 31, x5, 148, x7)
TEST_IMM_OP( slli, x11, x10, -21474836480, -9, 31, x5, 152, x7)
TEST_IMM_OP( slli, x11, x10, -144115192370823168, -67108865, 31, x5, 156, x7)
TEST_IMM_OP( slli, x11, x10, -288230380446679040, -134217729, 31, x5, 160, x7)
TEST_IMM_OP( slli, x11, x10, -576460756598390784, -268435457, 31, x5, 164, x7)
TEST_IMM_OP( slli, x11, x10, -1152921508901814272, -536870913, 31, x5, 168, x7)
TEST_IMM_OP( slli, x11, x10, -2305843013508661248, -1073741825, 31, x5, 172, x7)
TEST_IMM_OP( slli, x11, x10, 3074457342754947072, 1431655765, 31, x5, 176, x7)
TEST_IMM_OP( slli, x11, x10, -3074457347049914368, -1431655766, 31, x5, 180, x7)
TEST_IMM_OP( slli, x11, x10, -8589934592, -3, 31, x5, 184, x7)
TEST_IMM_OP( slli, x11, x10, -12884901888, -5, 31, x5, 188, x7)
TEST_IMM_OP( slli, x11, x10, -38654705664, -17, 31, x5, 192, x7)
TEST_IMM_OP( slli, x11, x10, -73014444032, -33, 31, x5, 196, x7)
TEST_IMM_OP( slli, x11, x10, -141733920768, -65, 31, x5, 200, x7)
TEST_IMM_OP( slli, x11, x10, -279172874240, -129, 31, x5, 204, x7)
TEST_IMM_OP( slli, x11, x10, -554050781184, -257, 31, x5, 208, x7)
TEST_IMM_OP( slli, x11, x10, -36028801313931264, -16777217, 31, x5, 212, x7)
TEST_IMM_OP( slli, x11, x10, 17592186044416, 8192, 31, x5, 216, x7)
TEST_IMM_OP( slli, x11, x10, 35184372088832, 16384, 31, x5, 220, x7)
#endif


RVMODEL_HALT
RVTEST_CODE_END

RVTEST_DATA_BEGIN
.align 4
.align 4
rvtest_data:
.word 0xbabecafe
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
.align 4

signature_x1_0:
    .fill 0*(XLEN/32),4,0xafacadee


signature_x1_1:
    .fill 28*(XLEN/32),4,0xafacadee


signature_x5_0:
    .fill 56*(XLEN/32),4,0xafacadee

RVMODEL_DATA_END
