# See LICENSE.incore for details
add:
  isa: I
  operation: '(rs1_val + rs2_val) & (-2**(xlen-1)-1)'
  formattype: 'rformat'
  rs1_val_data: 'gen_sign_dataset(xlen)'
  rs2_val_data: 'gen_sign_dataset(xlen)'
  template: 'TEST_RR_OP(inst, rd, rs1, rs2, correctval, rs1_val, rs2_val, swreg, offset, testreg)'

and:
  isa: I
  operation: '(rs1_val & rs2_val) & (-2**(xlen-1)-1)'
  formattype: 'rformat'
  rs1_val_data: 'gen_sign_dataset(xlen)'
  rs2_val_data: 'gen_sign_dataset(xlen)'
  template: 'TEST_RR_OP(inst, rd, rs1, rs2, correctval, rs1_val, rs2_val, swreg, offset, testreg)'

or:
  isa: I
  operation: '(rs1_val | rs2_val) & (-2**(xlen-1)-1)'
  formattype: 'rformat'
  rs1_val_data: 'gen_sign_dataset(xlen)'
  rs2_val_data: 'gen_sign_dataset(xlen)'
  template: 'TEST_RR_OP(inst, rd, rs1, rs2, correctval, rs1_val, rs2_val, swreg, offset, testreg)'

slt:
  isa: I
  operation: 'int(rs1_val < rs2_val) & (-2**(xlen-1)-1)'
  formattype: 'rformat'
  rs1_val_data: 'gen_sign_dataset(xlen)'
  rs2_val_data: 'gen_sign_dataset(xlen)'
  template: 'TEST_RR_OP(inst, rd, rs1, rs2, correctval, rs1_val, rs2_val, swreg, offset, testreg)'

sltu:
  isa: I
  operation: 'int(rs1_val < rs2_val) & (-2**(xlen-1)-1) '
  formattype: 'rformat'
  rs1_val_data: 'gen_usign_dataset(xlen)'
  rs2_val_data: 'gen_usign_dataset(xlen)'
  template: 'TEST_RR_OP(inst, rd, rs1, rs2, correctval, rs1_val, rs2_val, swreg, offset, testreg)'

xor:
  isa: I
  operation: '(rs1_val ^ rs2_val) & (-2**(xlen-1)-1)'
  formattype: 'rformat'
  rs1_val_data: 'gen_sign_dataset(xlen)'
  rs2_val_data: 'gen_sign_dataset(xlen)'
  template: 'TEST_RR_OP(inst, rd, rs1, rs2, correctval, rs1_val, rs2_val, swreg, offset, testreg)'

sll:
  isa: I
  operation: '(rs1_val << (rs2_val%32)) & (-2**(xlen-1)-1)'
  formattype: 'rformat'
  rs1_val_data: 'gen_sign_dataset(xlen)'
  rs2_val_data: 'gen_usign_dataset(5)'
  template: 'TEST_RR_OP(inst, rd, rs1, rs2, correctval, rs1_val, rs2_val, swreg, offset, testreg)'


srl:
  isa: I
  operation: '((rs1_val & 0xFFFFFFFF) >> (rs2_val%32)) & (-2**(xlen-1)-1)'
  formattype: 'rformat'
  rs1_val_data: 'gen_sign_dataset(xlen)'
  rs2_val_data: 'gen_usign_dataset(5)'
  template: 'TEST_RR_OP(inst, rd, rs1, rs2, correctval, rs1_val, rs2_val, swreg, offset, testreg)'

sra:
  isa: I
  operation: 'sra(rs1_val & 0xFFFFFFFF, (rs2_val%32)) & (-2**(xlen-1)-1)'
  formattype: 'rformat'
  rs1_val_data: 'gen_sign_dataset(xlen)'
  rs2_val_data: 'gen_usign_dataset(5)'
  template: 'TEST_RR_OP(inst, rd, rs1, rs2, correctval, rs1_val, rs2_val, swreg, offset, testreg)'

sub:
  isa: I
  operation: 'rs1_val - rs2_val'
  formattype: 'rformat'
  rs1_val_data: 'gen_sign_dataset(xlen)'
  rs2_val_data: 'gen_sign_dataset(xlen)'
  template: 'TEST_RR_OP(inst, rd, rs1, rs2, correctval, rs1_val, rs2_val, swreg, offset, testreg)'

addi:
  isa: I
  operation: 'rs1_val + imm_val'
  rs1_val_data: 'gen_sign_dataset(xlen)'
  imm_val_data: 'gen_sign_dataset(12)'
  formattype: 'iformat'
  template: 'TEST_IMM_OP( inst, rd, rs1, correctval, rs1_val, imm_val, swreg, offset, testreg)'

slti:
  isa: I
  operation: 'int(rs1_val < imm_val) & (-2**(xlen-1)-1)'
  rs1_val_data: 'gen_sign_dataset(xlen)'
  imm_val_data: 'gen_sign_dataset(12)'
  formattype: 'iformat'
  template: 'TEST_IMM_OP( inst, rd, rs1, correctval, rs1_val, imm_val, swreg, offset, testreg)'

sltiu:
  isa: I
  operation: 'int(rs1_val < imm_val) & (-2**(xlen-1)-1)'
  rs1_val_data: 'gen_usign_dataset(xlen)'
  imm_val_data: 'gen_usign_dataset(12)'
  formattype: 'iformat'
  template: 'TEST_IMM_OP( inst, rd, rs1, correctval, rs1_val, imm_val, swreg, offset, testreg)'

andi:
  isa: I
  operation: '(rs1_val & imm_val) & (-2**(xlen-1)-1)'
  rs1_val_data: 'gen_sign_dataset(xlen)'
  imm_val_data: 'gen_sign_dataset(12)'
  formattype: 'iformat'
  template: 'TEST_IMM_OP( inst, rd, rs1, correctval, rs1_val, imm_val, swreg, offset, testreg)'

ori:
  isa: I
  operation: '(rs1_val | imm_val) & (-2**(xlen-1)-1)'
  rs1_val_data: 'gen_sign_dataset(xlen)'
  imm_val_data: 'gen_sign_dataset(12)'
  formattype: 'iformat'
  template: 'TEST_IMM_OP( inst, rd, rs1, correctval, rs1_val, imm_val, swreg, offset, testreg)'

xori:
  isa: I
  operation: '(rs1_val ^ imm_val) & (-2**(xlen-1)-1)'
  rs1_val_data: 'gen_sign_dataset(xlen)'
  imm_val_data: 'gen_sign_dataset(12)'
  formattype: 'iformat'
  template: 'TEST_IMM_OP( inst, rd, rs1, correctval, rs1_val, imm_val, swreg, offset, testreg)'

slli:
  isa: I
  operation: '(rs1_val << imm_val) & (-2**(xlen-1)-1)'
  formattype: 'iformat'
  rs1_val_data: 'gen_sign_dataset(xlen)'
  imm_val_data: 'gen_usign_dataset(5)'
  template: 'TEST_IMM_OP( inst, rd, rs1, correctval, rs1_val, imm_val, swreg, offset, testreg)'

srli:
  isa: I
  operation: '((rs1_val & 0xFFFFFFFF) >> imm_val) & (-2**(xlen-1)-1)'
  formattype: 'iformat'
  rs1_val_data: 'gen_sign_dataset(xlen)'
  imm_val_data: 'gen_usign_dataset(5)'
  template: 'TEST_IMM_OP( inst, rd, rs1, correctval, rs1_val, imm_val, swreg, offset, testreg)'

srai:
  isa: I
  operation: 'sra(rs1_val & 0xFFFFFFFF, (imm_val%32)) & (-2**(xlen-1)-1)'
  formattype: 'iformat'
  rs1_val_data: 'gen_sign_dataset(xlen)'
  imm_val_data: 'gen_usign_dataset(5)'
  template: 'TEST_IMM_OP( inst, rd, rs1, correctval, rs1_val, imm_val, swreg, offset, testreg)'

lui:
  isa: I
  operation: 'imm_val << (xlen-20)'
  formattype: 'uformat'
  imm_val_data: 'gen_usign_dataset(20)'
  template: 'TEST_CASE(testreg, rd, correctval, swreg, offset, inst rd,imm_val)'

auipc:
  isa: I
  operation: 'imm_val << (xlen-20)'
  formattype: 'uformat'
  imm_val_data: 'gen_usign_dataset(20)'
  template: 'TEST_AUIPC(inst, rd, correctval, imm_val, swreg, offset, testreg)'

beq:
  isa: I
  formattype: 'bformat'
  rs1_val_data: 'gen_sign_dataset(xlen)'
  rs2_val_data: 'gen_sign_dataset(xlen)'
  imm_val_data: 'list(filter(lambda x: x%2==0,gen_sign_dataset(12)))'
  template: 'TEST_BRANCH_OP(inst, testreg, rs1, rs2, rs1_val, rs2_val, imm_val, label, swreg, offset)'

bge:
  isa: I
  formattype: 'bformat'
  rs1_val_data: 'gen_sign_dataset(xlen)'
  rs2_val_data: 'gen_sign_dataset(xlen)'
  imm_val_data: 'list(filter(lambda x: x%2==0,gen_sign_dataset(12)))'
  template: 'TEST_BRANCH_OP(inst, testreg, rs1, rs2, rs1_val, rs2_val, imm_val, label, swreg, offset)'

bgeu:
  isa: I
  formattype: 'bformat'
  rs1_val_data: 'gen_usign_dataset(xlen)'
  rs2_val_data: 'gen_usign_dataset(xlen)'
  imm_val_data: 'list(filter(lambda x: x%2==0,gen_sign_dataset(12)))'
  template: 'TEST_BRANCH_OP(inst, testreg, rs1, rs2, rs1_val, rs2_val, imm_val, label, swreg, offset)'

blt:
  isa: I
  formattype: 'bformat'
  rs1_val_data: 'gen_sign_dataset(xlen)'
  rs2_val_data: 'gen_sign_dataset(xlen)'
  imm_val_data: 'list(filter(lambda x: x%2==0,gen_sign_dataset(12)))'
  template: 'TEST_BRANCH_OP(inst, testreg, rs1, rs2, rs1_val, rs2_val, imm_val, label, swreg, offset)'

bltu:
  isa: I
  formattype: 'bformat'
  rs1_val_data: 'gen_usign_dataset(xlen)'
  rs2_val_data: 'gen_usign_dataset(xlen)'
  imm_val_data: 'list(filter(lambda x: x%2==0,gen_sign_dataset(12)))'
  template: 'TEST_BRANCH_OP(inst, testreg, rs1, rs2, rs1_val, rs2_val, imm_val, label, swreg, offset)'

bne:
  isa: I
  formattype: 'bformat'
  rs1_val_data: 'gen_sign_dataset(xlen)'
  rs2_val_data: 'gen_sign_dataset(xlen)'
  imm_val_data: 'list(filter(lambda x: x%2==0,gen_sign_dataset(12)))'
  template: 'TEST_BRANCH_OP(inst, testreg, rs1, rs2, rs1_val, rs2_val, imm_val, label, swreg, offset)'

sw:
  isa: I
  formattype: 'sformat'
  rs1_val_data: '[0,1,2,3]'
  rs2_val_data: 'gen_sign_dataset(xlen)'
  size: '4'
  imm_val_data: 'gen_sign_dataset(12)'
  template: 'TEST_SW(swreg,testreg,index,rs1,rs2,rs2_val,imm_val,offset,inst,rs1_val)'

sh:
  isa: I
  formattype: 'sformat'
  rs1_val_data: '[0,1,2,3]'
  rs2_val_data: 'gen_sign_dataset(xlen)'
  size: '2'
  imm_val_data: 'gen_sign_dataset(12)'
  template: 'TEST_SH(swreg,testreg,index,rs1,rs2,rs2_val,imm_val,offset,inst,rs1_val)'

sb:
  isa: I
  formattype: 'sformat'
  rs1_val_data: '[0,1,2,3]'
  rs2_val_data: 'gen_sign_dataset(xlen)'
  size: '1'
  imm_val_data: 'gen_sign_dataset(12)'
  template: 'TEST_SB(swreg,testreg,index,rs1,rs2,rs2_val,imm_val,offset,inst,rs1_val)'

lw:
  isa: I
  formattype: 'iformat'
  rs1_val_data: '[0,1,2,3]'
  size: '4'
  imm_val_data: 'gen_sign_dataset(12)'
  template: 'TEST_LW(swreg,testreg,index,rs1,rd,imm_val,offset,inst,rs1_val)'

lhu:
  isa: I
  formattype: 'iformat'
  rs1_val_data: '[0,1,2,3]'
  size: '2'
  imm_val_data: 'gen_sign_dataset(12)'
  template: 'TEST_LH(swreg,testreg,index,rs1,rd,imm_val,offset,inst,rs1_val)'

lh:
  isa: I
  formattype: 'iformat'
  rs1_val_data: '[0,1,2,3]'
  size: '2'
  imm_val_data: 'gen_sign_dataset(12)'
  template: 'TEST_LH(swreg,testreg,index,rs1,rd,imm_val,offset,inst,rs1_val)'

lbu:
  isa: I
  formattype: 'iformat'
  rs1_val_data: '[0,1,2,3]'
  size: '1'
  imm_val_data: 'gen_sign_dataset(12)'
  template: 'TEST_LB(swreg,testreg,index,rs1,rd,imm_val,offset,inst,rs1_val)'

lb:
  isa: I
  formattype: 'iformat'
  rs1_val_data: '[0,1,2,3]'
  size: '1'
  imm_val_data: 'gen_sign_dataset(12)'
  template: 'TEST_LB(swreg,testreg,index,rs1,rd,imm_val,offset,inst,rs1_val)'

jal:
  isa: I
  formattype: 'jformat'
  imm_val_data: 'list(filter(lambda x: x%2==0,gen_sign_dataset(20)))'
  template: 'TEST_JAL_OP(testreg, rd, imm_val, label, swreg, offset)'

jalr:
  isa: I
  formattype: 'iformat'
  imm_val_data: 'gen_sign_dataset(12)'
  template: 'TEST_JALR_OP(testreg, rd, rs1, imm_val, swreg, offset)'

mul:
  isa: IM
  formattype: 'rformat'
  rs1_val_data: 'gen_sign_dataset(xlen)'
  rs2_val_data: 'gen_sign_dataset(xlen)'
  template: 'TEST_RR_OP(inst, rd, rs1, rs2, correctval, rs1_val, rs2_val, swreg, offset, testreg)'

mulh:
  isa: IM
  formattype: 'rformat'
  rs1_val_data: 'gen_sign_dataset(xlen)'
  rs2_val_data: 'gen_sign_dataset(xlen)'
  template: 'TEST_RR_OP(inst, rd, rs1, rs2, correctval, rs1_val, rs2_val, swreg, offset, testreg)'

mulhu:
  isa: IM
  formattype: 'rformat'
  rs1_val_data: 'gen_sign_dataset(xlen)'
  rs2_val_data: 'gen_sign_dataset(xlen)'
  template: 'TEST_RR_OP(inst, rd, rs1, rs2, correctval, rs1_val, rs2_val, swreg, offset, testreg)'

mulhsu:
  isa: IM
  formattype: 'rformat'
  rs1_val_data: 'gen_sign_dataset(xlen)'
  rs2_val_data: 'gen_sign_dataset(xlen)'
  template: 'TEST_RR_OP(inst, rd, rs1, rs2, correctval, rs1_val, rs2_val, swreg, offset, testreg)'

div:
  isa: IM
  formattype: 'rformat'
  rs1_val_data: 'gen_sign_dataset(xlen)'
  rs2_val_data: 'gen_sign_dataset(xlen)'
  template: 'TEST_RR_OP(inst, rd, rs1, rs2, correctval, rs1_val, rs2_val, swreg, offset, testreg)'

divu:
  isa: IM
  formattype: 'rformat'
  rs1_val_data: 'gen_sign_dataset(xlen)'
  rs2_val_data: 'gen_sign_dataset(xlen)'
  template: 'TEST_RR_OP(inst, rd, rs1, rs2, correctval, rs1_val, rs2_val, swreg, offset, testreg)'

rem:
  isa: IM
  formattype: 'rformat'
  rs1_val_data: 'gen_sign_dataset(xlen)'
  rs2_val_data: 'gen_sign_dataset(xlen)'
  template: 'TEST_RR_OP(inst, rd, rs1, rs2, correctval, rs1_val, rs2_val, swreg, offset, testreg)'

remu:
  isa: IM
  formattype: 'rformat'
  rs1_val_data: 'gen_sign_dataset(xlen)'
  rs2_val_data: 'gen_sign_dataset(xlen)'
  template: 'TEST_RR_OP(inst, rd, rs1, rs2, correctval, rs1_val, rs2_val, swreg, offset, testreg)'

c.mv:
  isa: IC
  formattype: 'crformat'
  rs2_val_data: 'gen_sign_dataset(xlen)'
  template: 'TEST_CR_OP( inst, rs1, rs2, correctval, 0, rs2_val, swreg, offset, testreg)' 

c.add:
  isa: IC
  formattype: 'crformat'
  rs1_val_data: 'gen_sign_dataset(xlen)'
  rs2_val_data: 'gen_sign_dataset(xlen)'
  template: 'TEST_CR_OP( inst, rs1, rs2, correctval, rs1_val, rs2_val, swreg, offset, testreg)' 

c.and:
  isa: IC
  formattype: 'crformat'
  rs1_val_data: 'gen_sign_dataset(xlen)'
  rs2_val_data: 'gen_sign_dataset(xlen)'
  template: 'TEST_CR_OP( inst, rs1, rs2, correctval, rs1_val, rs2_val, swreg, offset, testreg)' 

c.or:
  isa: IC
  formattype: 'crformat'
  rs1_val_data: 'gen_sign_dataset(xlen)'
  rs2_val_data: 'gen_sign_dataset(xlen)'
  template: 'TEST_CR_OP( inst, rs1, rs2, correctval, rs1_val, rs2_val, swreg, offset, testreg)' 

c.xor:
  isa: IC
  formattype: 'crformat'
  rs1_val_data: 'gen_sign_dataset(xlen)'
  rs2_val_data: 'gen_sign_dataset(xlen)'
  template: 'TEST_CR_OP( inst, rs1, rs2, correctval, rs1_val, rs2_val, swreg, offset, testreg)' 

c.sub:
  isa: IC
  formattype: 'crformat'
  rs1_val_data: 'gen_sign_dataset(xlen)'
  rs2_val_data: 'gen_sign_dataset(xlen)'
  template: 'TEST_CR_OP( inst, rs1, rs2, correctval, rs1_val, rs2_val, swreg, offset, testreg)' 

c.andi:
  isa: IC
  formattype: 'cbformat'
  rs1_val_data: 'gen_sign_dataset(xlen)'
  imm_val_data: 'gen_sign_dataset(6)'
  template: 'TEST_CI_OP( inst, rs1, correctval, rs1_val, imm_val, swreg, offset, testreg)'

c.addi:
  isa: IC
  formattype: 'ciformat'
  rs1_val_data: 'gen_sign_dataset(xlen)'
  imm_val_data: 'gen_sign_dataset(6)'
  template: 'TEST_CI_OP( inst, rd, correctval, rs1_val, imm_val, swreg, offset, testreg)'

c.addi16sp:
  isa: IC
  formattype: 'ciformat'
  rs1_val_data: 'gen_sign_dataset(xlen)'
  imm_val_data: 'list(filter( lambda x: x!=0 and x%16==0 , gen_sign_dataset(10))) + [496]'
  template: 'TEST_CI_OP( inst, x2, correctval, rs1_val, imm_val, swreg, offset, testreg)'

c.addi4spn:
  isa: IC
  formattype: 'ciwformat'
  imm_val_data: 'list(filter( lambda x: x!=0 , [ 4*x for x in gen_usign_dataset(8)]))'
  template: 'TEST_CADDI4SPN_OP( inst, rd, correctval, imm_val, swreg, offset, testreg)'

c.slli:
  isa: IC
  formattype: 'ciformat'
  rs1_val_data: 'gen_sign_dataset(xlen)'
  imm_val_data: 'list(filter(lambda x: x!=0, gen_usign_dataset(4)))'
  template: 'TEST_CI_OP( inst, rd, correctval, rs1_val, imm_val, swreg, offset, testreg)'

c.srli:
  isa: IC
  formattype: 'cbformat'
  rs1_val_data: 'gen_sign_dataset(xlen)'
  imm_val_data: 'list(filter(lambda x: x!=0, gen_usign_dataset(4)))'
  template: 'TEST_CI_OP( inst, rs1, correctval, rs1_val, imm_val, swreg, offset, testreg)'

c.srai:
  isa: IC
  formattype: 'cbformat'
  rs1_val_data: 'gen_sign_dataset(xlen)'
  imm_val_data: 'list(filter(lambda x: x!=0, gen_usign_dataset(4)))'
  template: 'TEST_CI_OP( inst, rs1, correctval, rs1_val, imm_val, swreg, offset, testreg)'

c.li:
  isa: IC
  formattype: 'ciformat'
  imm_val_data: 'gen_sign_dataset(6)'
  template: 'TEST_CASE(testreg, rd, correctval, swreg, offset, inst rd, imm_val;)'

c.lui:
  isa: IC
  formattype: 'ciformat'
  rs1_val_data: 'gen_sign_dataset(xlen)'
  imm_val_data: 'list(filter(lambda x: x!=0 ,gen_usign_dataset(6)))'
  template: 'TEST_CI_OP( inst, rd, correctval, rs1_val, imm_val, swreg, offset, testreg)'

c.sw:
  isa: IC
  formattype: 'csformat'
  rs1_val_data: '[0]'
  rs2_val_data: 'gen_sign_dataset(xlen)'
  imm_val_data: '[x*4 for x in gen_usign_dataset(5)]'
  template: 'TEST_SW(swreg,testreg,index,rs1,rs2,rs2_val,imm_val,offset,inst,rs1_val)'

c.lw:
  isa: IC
  formattype: 'clformat'
  rs1_val_data: '[0]'
  imm_val_data: '[x*4 for x in gen_usign_dataset(5)]'
  template: 'TEST_LW(swreg,testreg,index,rs1,rd,imm_val,offset,inst,rs1_val)'

c.lwsp:
  isa: IC
  formattype: 'ciformat'
  imm_val_data: '[x*4 for x in gen_usign_dataset(5)]'
  template: 'TEST_LW(swreg,testreg,index,x2,rd,imm_val,offset,inst,0)'

c.swsp:
  isa: IC
  formattype: 'cssformat'
  rs2_val_data: 'gen_sign_dataset(xlen)'
  imm_val_data: '[x*4 for x in gen_usign_dataset(5)]'
  template: 'TEST_SW(swreg,testreg,index,x2,rs2,rs2_val,imm_val,offset,inst,0)'
