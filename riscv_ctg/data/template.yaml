add:
  operation: '(rs1_val + rs2_val) & (-2**(xlen-1)-1)'
  formattype: 'rformat'
  rs1_val_data: 'gen_sign_dataset(xlen)'
  rs2_val_data: 'gen_sign_dataset(xlen)'
  template: 'TEST_RR_OP(inst, rd, rs1, rs2, correctval, rs1_val, rs2_val, swreg, offset, testreg)'

and:
  operation: '(rs1_val & rs2_val) & (-2**(xlen-1)-1)'
  formattype: 'rformat'
  rs1_val_data: 'gen_sign_dataset(xlen)'
  rs2_val_data: 'gen_sign_dataset(xlen)'
  template: 'TEST_RR_OP(inst, rd, rs1, rs2, correctval, rs1_val, rs2_val, swreg, offset, testreg)'

or:
  operation: '(rs1_val | rs2_val) & (-2**(xlen-1)-1)'
  formattype: 'rformat'
  rs1_val_data: 'gen_sign_dataset(xlen)'
  rs2_val_data: 'gen_sign_dataset(xlen)'
  template: 'TEST_RR_OP(inst, rd, rs1, rs2, correctval, rs1_val, rs2_val, swreg, offset, testreg)'

slt:
  operation: 'int(rs1_val < rs2_val) & (-2**(xlen-1)-1)'
  formattype: 'rformat'
  rs1_val_data: 'gen_sign_dataset(xlen)'
  rs2_val_data: 'gen_sign_dataset(xlen)'
  template: 'TEST_RR_OP(inst, rd, rs1, rs2, correctval, rs1_val, rs2_val, swreg, offset, testreg)'

sltu:
  operation: 'int(rs1_val < rs2_val) & (-2**(xlen-1)-1) '
  formattype: 'rformat'
  rs1_val_data: 'gen_usign_dataset(xlen)'
  rs2_val_data: 'gen_usign_dataset(xlen)'
  template: 'TEST_RR_OP(inst, rd, rs1, rs2, correctval, rs1_val, rs2_val, swreg, offset, testreg)'

xor:
  operation: '(rs1_val ^ rs2_val) & (-2**(xlen-1)-1)'
  formattype: 'rformat'
  rs1_val_data: 'gen_sign_dataset(xlen)'
  rs2_val_data: 'gen_sign_dataset(xlen)'
  template: 'TEST_RR_OP(inst, rd, rs1, rs2, correctval, rs1_val, rs2_val, swreg, offset, testreg)'

sll:
  operation: '(rs1_val << (rs2_val%32)) & (-2**(xlen-1)-1)'
  formattype: 'rformat'
  rs1_val_data: 'gen_sign_dataset(xlen)'
  rs2_val_data: 'gen_usign_dataset(5)'
  template: 'TEST_RR_OP(inst, rd, rs1, rs2, correctval, rs1_val, rs2_val, swreg, offset, testreg)'


srl:
  operation: '((rs1_val & 0xFFFFFFFF) >> (rs2_val%32)) & (-2**(xlen-1)-1)'
  formattype: 'rformat'
  rs1_val_data: 'gen_sign_dataset(xlen)'
  rs2_val_data: 'gen_usign_dataset(5)'
  template: 'TEST_RR_OP(inst, rd, rs1, rs2, correctval, rs1_val, rs2_val, swreg, offset, testreg)'

sra:
  operation: 'sra(rs1_val & 0xFFFFFFFF, (rs2_val%32)) & (-2**(xlen-1)-1)'
  formattype: 'rformat'
  rs1_val_data: 'gen_sign_dataset(xlen)'
  rs2_val_data: 'gen_usign_dataset(5)'
  template: 'TEST_RR_OP(inst, rd, rs1, rs2, correctval, rs1_val, rs2_val, swreg, offset, testreg)'

sub:
  operation: 'rs1_val - rs2_val'
  formattype: 'rformat'
  rs1_val_data: 'gen_sign_dataset(xlen)'
  rs2_val_data: 'gen_sign_dataset(xlen)'
  template: 'TEST_RR_OP(inst, rd, rs1, rs2, correctval, rs1_val, rs2_val, swreg, offset, testreg)'

addi:
  operation: 'rs1_val + imm_val'
  rs1_val_data: 'gen_sign_dataset(xlen)'
  imm_val_data: 'gen_sign_dataset(12)'
  formattype: 'iformat'
  template: 'TEST_IMM_OP( inst, rd, rs1, correctval, rs1_val, imm_val, swreg, offset, testreg)'

slti:
  operation: 'int(rs1_val < imm_val) & (-2**(xlen-1)-1)'
  rs1_val_data: 'gen_sign_dataset(xlen)'
  imm_val_data: 'gen_sign_dataset(12)'
  formattype: 'iformat'
  template: 'TEST_IMM_OP( inst, rd, rs1, correctval, rs1_val, imm_val, swreg, offset, testreg)'

sltiu:
  operation: 'int(rs1_val < imm_val) & (-2**(xlen-1)-1)'
  rs1_val_data: 'gen_usign_dataset(xlen)'
  imm_val_data: 'gen_usign_dataset(12)'
  formattype: 'iformat'
  template: 'TEST_IMM_OP( inst, rd, rs1, correctval, rs1_val, imm_val, swreg, offset, testreg)'

andi:
  operation: '(rs1_val & imm_val) & (-2**(xlen-1)-1)'
  rs1_val_data: 'gen_sign_dataset(xlen)'
  imm_val_data: 'gen_sign_dataset(12)'
  formattype: 'iformat'
  template: 'TEST_IMM_OP( inst, rd, rs1, correctval, rs1_val, imm_val, swreg, offset, testreg)'

ori:
  operation: '(rs1_val | imm_val) & (-2**(xlen-1)-1)'
  rs1_val_data: 'gen_sign_dataset(xlen)'
  imm_val_data: 'gen_sign_dataset(12)'
  formattype: 'iformat'
  template: 'TEST_IMM_OP( inst, rd, rs1, correctval, rs1_val, imm_val, swreg, offset, testreg)'

xori:
  operation: '(rs1_val ^ imm_val) & (-2**(xlen-1)-1)'
  rs1_val_data: 'gen_sign_dataset(xlen)'
  imm_val_data: 'gen_sign_dataset(12)'
  formattype: 'iformat'
  template: 'TEST_IMM_OP( inst, rd, rs1, correctval, rs1_val, imm_val, swreg, offset, testreg)'

slli:
  operation: '(rs1_val << imm_val) & (-2**(xlen-1)-1)'
  formattype: 'iformat'
  rs1_val_data: 'gen_sign_dataset(xlen)'
  imm_val_data: 'gen_usign_dataset(5)'
  template: 'TEST_IMM_OP( inst, rd, rs1, correctval, rs1_val, imm_val, swreg, offset, testreg)'

srli:
  operation: '((rs1_val & 0xFFFFFFFF) >> imm_val) & (-2**(xlen-1)-1)'
  formattype: 'iformat'
  rs1_val_data: 'gen_sign_dataset(xlen)'
  imm_val_data: 'gen_usign_dataset(5)'
  template: 'TEST_IMM_OP( inst, rd, rs1, correctval, rs1_val, imm_val, swreg, offset, testreg)'

srai:
  operation: 'sra(rs1_val & 0xFFFFFFFF, (imm_val%32)) & (-2**(xlen-1)-1)'
  formattype: 'iformat'
  rs1_val_data: 'gen_sign_dataset(xlen)'
  imm_val_data: 'gen_usign_dataset(5)'
  template: 'TEST_IMM_OP( inst, rd, rs1, correctval, rs1_val, imm_val, swreg, offset, testreg)'

lui:
  operation: 'imm_val << (xlen-20)'
  formattype: 'uformat'
  imm_val_data: 'gen_usign_dataset(20)'
  template: 'TEST_CASE(testreg, rd, correctval, swreg, offset, inst rd,imm_val)'

auipc:
  operation: 'imm_val << (xlen-20)'
  formattype: 'uformat'
  imm_val_data: 'gen_usign_dataset(20)'
  template: 'TEST_AUIPC(inst, rd, correctval, imm_val, swreg, offset, testreg)'

beq:
  formattype: 'bformat'
  rs1_val_data: 'gen_sign_dataset(xlen)'
  rs2_val_data: 'gen_sign_dataset(xlen)'
  imm_val_data: 'list(filter(lambda x: x%2==0,gen_sign_dataset(12)))'
  template: 'TEST_BRANCH_OP(inst, testreg, rs1, rs2, rs1_val, rs2_val, imm_val, label, swreg, offset)'

bge:
  formattype: 'bformat'
  rs1_val_data: 'gen_sign_dataset(xlen)'
  rs2_val_data: 'gen_sign_dataset(xlen)'
  imm_val_data: 'list(filter(lambda x: x%2==0,gen_sign_dataset(12)))'
  template: 'TEST_BRANCH_OP(inst, testreg, rs1, rs2, rs1_val, rs2_val, imm_val, label, swreg, offset)'

bgeu:
  formattype: 'bformat'
  rs1_val_data: 'gen_usign_dataset(xlen)'
  rs2_val_data: 'gen_usign_dataset(xlen)'
  imm_val_data: 'list(filter(lambda x: x%2==0,gen_sign_dataset(12)))'
  template: 'TEST_BRANCH_OP(inst, testreg, rs1, rs2, rs1_val, rs2_val, imm_val, label, swreg, offset)'

blt:
  formattype: 'bformat'
  rs1_val_data: 'gen_sign_dataset(xlen)'
  rs2_val_data: 'gen_sign_dataset(xlen)'
  imm_val_data: 'list(filter(lambda x: x%2==0,gen_sign_dataset(12)))'
  template: 'TEST_BRANCH_OP(inst, testreg, rs1, rs2, rs1_val, rs2_val, imm_val, label, swreg, offset)'

bltu:
  formattype: 'bformat'
  rs1_val_data: 'gen_usign_dataset(xlen)'
  rs2_val_data: 'gen_usign_dataset(xlen)'
  imm_val_data: 'list(filter(lambda x: x%2==0,gen_sign_dataset(12)))'
  template: 'TEST_BRANCH_OP(inst, testreg, rs1, rs2, rs1_val, rs2_val, imm_val, label, swreg, offset)'

bne:
  formattype: 'bformat'
  rs1_val_data: 'gen_sign_dataset(xlen)'
  rs2_val_data: 'gen_sign_dataset(xlen)'
  imm_val_data: 'list(filter(lambda x: x%2==0,gen_sign_dataset(12)))'
  template: 'TEST_BRANCH_OP(inst, testreg, rs1, rs2, rs1_val, rs2_val, imm_val, label, swreg, offset)'

lw:
  formattype: 'ldstformat'
  rs1_val_data: '[0]'
  size: '4'
  imm_val_data: 'gen_sign_dataset(12)'
  template: 'TEST_LW(swreg,testreg,index,rs1,rd,imm_val,offset,inst,rs1_val)'

lh:
  formattype: 'ldstformat'
  rs1_val_data: '[0,1,2,3]'
  size: '2'
  imm_val_data: 'gen_sign_dataset(12)'
  template: 'TEST_LH(swreg,testreg,index,rs1,rd,imm_val,offset,inst,rs1_val)'

lb:
  formattype: 'ldstformat'
  rs1_val_data: '[0,1,2,3]'
  size: '1'
  imm_val_data: 'gen_sign_dataset(12)'
  template: 'TEST_LB(swreg,testreg,index,rs1,rd,imm_val,offset,inst,rs1_val)'
