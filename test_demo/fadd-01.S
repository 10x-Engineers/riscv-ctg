
// -----------
// This file was generated by riscv_ctg (https://gitlab.com/incoresemi/riscv-compliance/riscv_ctg)
// version   : 0.4.0
// timestamp : Thu Jan  7 14:35:29 2021 GMT
// usage     : riscv_ctg \
//                  -- cgf ('/home/karthi/riscv_ctg/sample_cgfs/dataset.cgf', '/home/karthi/riscv_ctg/sample_cgfs/sample.cgf') \
//                  -- xlen 32 \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fadd instruction of the RISC-V F extension for the fadd covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*32.*);check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fadd)

RVTEST_VALBASEUPD(x16,test_fp)
RVTEST_SIGBASE(x15,signature_x15_1)

inst_0:
// rs1 == rs2 != rd, rs1==f5, rs2==f5, rd==f23, rs1==4286578688, rs2_val==4286578688, rm_val==0
// opcode: fadd ; op1:f5; op2:f5; dest:f23; op1val:0xff800000;  op2val:0xff800000; valaddr_reg:x16; val_offset:0; rmval:0x0
TEST_FPRR_OP(fadd, f23, f5, f5, 0x0, x16, 0, x17, x15, 0)

inst_1:
// rs2 == rd != rs1, rs1==f16, rs2==f18, rd==f18, rs1==4282384383, rs2_val==4286578688, rm_val==0
// opcode: fadd ; op1:f16; op2:f18; dest:f18; op1val:0xff3fffff;  op2val:0xff800000; valaddr_reg:x16; val_offset:8; rmval:0x0
TEST_FPRR_OP(fadd, f18, f16, f18, 0x0, x16, 8, x17, x15, 4)

inst_2:
// rs1 == rs2 == rd, rs1==f15, rs2==f15, rd==f15, rs1==3389919280, rs2_val==4286578688, rm_val==0
// opcode: fadd ; op1:f15; op2:f15; dest:f15; op1val:0xca0e1030;  op2val:0xff800000; valaddr_reg:x16; val_offset:16; rmval:0x0
TEST_FPRR_OP(fadd, f15, f15, f15, 0x0, x16, 16, x17, x15, 8)

inst_3:
// rs1 != rs2  and rs1 != rd and rs2 != rd, rs1==f6, rs2==f4, rd==f3, rs1==3212836864, rs2_val==4286578688, rm_val==0
// opcode: fadd ; op1:f6; op2:f4; dest:f3; op1val:0xbf800000;  op2val:0xff800000; valaddr_reg:x16; val_offset:24; rmval:0x0
TEST_FPRR_OP(fadd, f3, f6, f4, 0x0, x16, 24, x17, x15, 12)

inst_4:
// rs1 == rd != rs2, rs1==f21, rs2==f20, rd==f21, rs1==3212836864, rs2_val==4286578688, rm_val==0
// opcode: fadd ; op1:f21; op2:f20; dest:f21; op1val:0xbf800000;  op2val:0xff800000; valaddr_reg:x16; val_offset:32; rmval:0x0
TEST_FPRR_OP(fadd, f21, f21, f20, 0x0, x16, 32, x17, x15, 16)

inst_5:
// rs1==f23, rs2==f16, rd==f13, rs1==3212836864, rs2_val==4286578688, rm_val==0
// opcode: fadd ; op1:f23; op2:f16; dest:f13; op1val:0xbf800000;  op2val:0xff800000; valaddr_reg:x16; val_offset:40; rmval:0x0
TEST_FPRR_OP(fadd, f13, f23, f16, 0x0, x16, 40, x17, x15, 20)

inst_6:
// rs1==f20, rs2==f30, rd==f2, rs1==3212836864, rs2_val==4286578688, rm_val==0
// opcode: fadd ; op1:f20; op2:f30; dest:f2; op1val:0xbf800000;  op2val:0xff800000; valaddr_reg:x16; val_offset:48; rmval:0x0
TEST_FPRR_OP(fadd, f2, f20, f30, 0x0, x16, 48, x17, x15, 24)

inst_7:
// rs1==f30, rs2==f9, rd==f31, rs1==3212836864, rs2_val==4286578688, rm_val==0
// opcode: fadd ; op1:f30; op2:f9; dest:f31; op1val:0xbf800000;  op2val:0xff800000; valaddr_reg:x16; val_offset:56; rmval:0x0
TEST_FPRR_OP(fadd, f31, f30, f9, 0x0, x16, 56, x17, x15, 28)

inst_8:
// rs1==f28, rs2==f7, rd==f14, rs1==2147483648, rs2_val==4286578688, rm_val==0
// opcode: fadd ; op1:f28; op2:f7; dest:f14; op1val:0x80000000;  op2val:0xff800000; valaddr_reg:x16; val_offset:64; rmval:0x0
TEST_FPRR_OP(fadd, f14, f28, f7, 0x0, x16, 64, x17, x15, 32)

inst_9:
// rs1==f13, rs2==f27, rd==f17, rs1==0, rs2_val==4286578688, rm_val==0
// opcode: fadd ; op1:f13; op2:f27; dest:f17; op1val:0x0;  op2val:0xff800000; valaddr_reg:x16; val_offset:72; rmval:0x0
TEST_FPRR_OP(fadd, f17, f13, f27, 0x0, x16, 72, x17, x15, 36)

inst_10:
// rs1==f22, rs2==f3, rd==f28, rs1==1065353216, rs2_val==4286578688, rm_val==0
// opcode: fadd ; op1:f22; op2:f3; dest:f28; op1val:0x3f800000;  op2val:0xff800000; valaddr_reg:x16; val_offset:80; rmval:0x0
TEST_FPRR_OP(fadd, f28, f22, f3, 0x0, x16, 80, x17, x15, 40)

inst_11:
// rs1==f29, rs2==f17, rd==f1, rs1==1065353216, rs2_val==4286578688, rm_val==0
// opcode: fadd ; op1:f29; op2:f17; dest:f1; op1val:0x3f800000;  op2val:0xff800000; valaddr_reg:x16; val_offset:88; rmval:0x0
TEST_FPRR_OP(fadd, f1, f29, f17, 0x0, x16, 88, x17, x15, 44)

inst_12:
// rs1==f25, rs2==f0, rd==f8, rs1==1065353216, rs2_val==4286578688, rm_val==0
// opcode: fadd ; op1:f25; op2:f0; dest:f8; op1val:0x3f800000;  op2val:0xff800000; valaddr_reg:x16; val_offset:96; rmval:0x0
TEST_FPRR_OP(fadd, f8, f25, f0, 0x0, x16, 96, x17, x15, 48)

inst_13:
// rs1==f11, rs2==f19, rd==f5, rs1==1065353216, rs2_val==4286578688, rm_val==0
// opcode: fadd ; op1:f11; op2:f19; dest:f5; op1val:0x3f800000;  op2val:0xff800000; valaddr_reg:x16; val_offset:104; rmval:0x0
TEST_FPRR_OP(fadd, f5, f11, f19, 0x0, x16, 104, x17, x15, 52)

inst_14:
// rs1==f9, rs2==f31, rd==f0, rs1==1065353216, rs2_val==4286578688, rm_val==0
// opcode: fadd ; op1:f9; op2:f31; dest:f0; op1val:0x3f800000;  op2val:0xff800000; valaddr_reg:x16; val_offset:112; rmval:0x0
TEST_FPRR_OP(fadd, f0, f9, f31, 0x0, x16, 112, x17, x15, 56)

inst_15:
// rs1==f26, rs2==f23, rd==f20, rs1==1065353258, rs2_val==4286578688, rm_val==0
// opcode: fadd ; op1:f26; op2:f23; dest:f20; op1val:0x3f80002a;  op2val:0xff800000; valaddr_reg:x16; val_offset:120; rmval:0x0
TEST_FPRR_OP(fadd, f20, f26, f23, 0x0, x16, 120, x17, x15, 60)

inst_16:
// rs1==f3, rs2==f29, rd==f30, rs1==2134900735, rs2_val==4286578688, rm_val==0
// opcode: fadd ; op1:f3; op2:f29; dest:f30; op1val:0x7f3fffff;  op2val:0xff800000; valaddr_reg:x16; val_offset:128; rmval:0x0
TEST_FPRR_OP(fadd, f30, f3, f29, 0x0, x16, 128, x17, x15, 64)

inst_17:
// rs1==f14, rs2==f24, rd==f6, rs1==2139095040, rs2_val==4286578688, rm_val==0
// opcode: fadd ; op1:f14; op2:f24; dest:f6; op1val:0x7f800000;  op2val:0xff800000; valaddr_reg:x16; val_offset:136; rmval:0x0
TEST_FPRR_OP(fadd, f6, f14, f24, 0x0, x16, 136, x17, x15, 68)

inst_18:
// rs1==f1, rs2==f2, rd==f19, rs1==4286578689, rs2_val==4286578688, rm_val==0
// opcode: fadd ; op1:f1; op2:f2; dest:f19; op1val:0xff800001;  op2val:0xff800000; valaddr_reg:x16; val_offset:144; rmval:0x0
TEST_FPRR_OP(fadd, f19, f1, f2, 0x0, x16, 144, x17, x15, 72)

inst_19:
// rs1==f27, rs2==f21, rd==f4, rs1==4286578689, rs2_val==4286578688, rm_val==0
// opcode: fadd ; op1:f27; op2:f21; dest:f4; op1val:0xff800001;  op2val:0xff800000; valaddr_reg:x16; val_offset:152; rmval:0x0
TEST_FPRR_OP(fadd, f4, f27, f21, 0x0, x16, 152, x17, x15, 76)

inst_20:
// rs1==f4, rs2==f22, rd==f7, rs1==1000, rs2_val==4286578688, rm_val==0
// opcode: fadd ; op1:f4; op2:f22; dest:f7; op1val:0x3e8;  op2val:0xff800000; valaddr_reg:x16; val_offset:160; rmval:0x0
TEST_FPRR_OP(fadd, f7, f4, f22, 0x0, x16, 160, x17, x15, 80)

inst_21:
// rs1==f19, rs2==f8, rd==f26, rs1==4286578688, rs2_val==4282384383, rm_val==0
// opcode: fadd ; op1:f19; op2:f8; dest:f26; op1val:0xff800000;  op2val:0xff3fffff; valaddr_reg:x16; val_offset:168; rmval:0x0
TEST_FPRR_OP(fadd, f26, f19, f8, 0x0, x16, 168, x17, x15, 84)

inst_22:
// rs1==f8, rs2==f26, rd==f11, rs1==4282384383, rs2_val==4282384383, rm_val==0
// opcode: fadd ; op1:f8; op2:f26; dest:f11; op1val:0xff3fffff;  op2val:0xff3fffff; valaddr_reg:x16; val_offset:176; rmval:0x0
TEST_FPRR_OP(fadd, f11, f8, f26, 0x0, x16, 176, x17, x15, 88)

inst_23:
// rs1==f7, rs2==f1, rd==f12, rs1==3778364046, rs2_val==4282384383, rm_val==0
// opcode: fadd ; op1:f7; op2:f1; dest:f12; op1val:0xe135428e;  op2val:0xff3fffff; valaddr_reg:x16; val_offset:184; rmval:0x0
TEST_FPRR_OP(fadd, f12, f7, f1, 0x0, x16, 184, x17, x15, 92)

inst_24:
// rs1==f0, rs2==f11, rd==f24, rs1==3212836864, rs2_val==4282384383, rm_val==0
// opcode: fadd ; op1:f0; op2:f11; dest:f24; op1val:0xbf800000;  op2val:0xff3fffff; valaddr_reg:x16; val_offset:192; rmval:0x0
TEST_FPRR_OP(fadd, f24, f0, f11, 0x0, x16, 192, x17, x15, 96)

inst_25:
// rs1==f24, rs2==f10, rd==f27, rs1==3212836864, rs2_val==4282384383, rm_val==0
// opcode: fadd ; op1:f24; op2:f10; dest:f27; op1val:0xbf800000;  op2val:0xff3fffff; valaddr_reg:x16; val_offset:200; rmval:0x0
TEST_FPRR_OP(fadd, f27, f24, f10, 0x0, x16, 200, x17, x15, 100)

inst_26:
// rs1==f17, rs2==f28, rd==f25, rs1==3212836864, rs2_val==4282384383, rm_val==0
// opcode: fadd ; op1:f17; op2:f28; dest:f25; op1val:0xbf800000;  op2val:0xff3fffff; valaddr_reg:x16; val_offset:208; rmval:0x0
TEST_FPRR_OP(fadd, f25, f17, f28, 0x0, x16, 208, x17, x15, 104)

inst_27:
// rs1==f2, rs2==f25, rd==f9, rs1==3212836864, rs2_val==4282384383, rm_val==0
// opcode: fadd ; op1:f2; op2:f25; dest:f9; op1val:0xbf800000;  op2val:0xff3fffff; valaddr_reg:x16; val_offset:216; rmval:0x0
TEST_FPRR_OP(fadd, f9, f2, f25, 0x0, x16, 216, x17, x15, 108)

inst_28:
// rs1==f12, rs2==f13, rd==f16, rs1==3212836864, rs2_val==4282384383, rm_val==0
// opcode: fadd ; op1:f12; op2:f13; dest:f16; op1val:0xbf800000;  op2val:0xff3fffff; valaddr_reg:x16; val_offset:224; rmval:0x0
TEST_FPRR_OP(fadd, f16, f12, f13, 0x0, x16, 224, x17, x15, 112)

inst_29:
// rs1==f18, rs2==f14, rd==f10, rs1==2147483648, rs2_val==4282384383, rm_val==0
// opcode: fadd ; op1:f18; op2:f14; dest:f10; op1val:0x80000000;  op2val:0xff3fffff; valaddr_reg:x16; val_offset:232; rmval:0x0
TEST_FPRR_OP(fadd, f10, f18, f14, 0x0, x16, 232, x17, x15, 116)

inst_30:
// rs1==f10, rs2==f12, rd==f29, rs1==0, rs2_val==4282384383, rm_val==0
// opcode: fadd ; op1:f10; op2:f12; dest:f29; op1val:0x0;  op2val:0xff3fffff; valaddr_reg:x16; val_offset:240; rmval:0x0
TEST_FPRR_OP(fadd, f29, f10, f12, 0x0, x16, 240, x17, x15, 120)

inst_31:
// rs1==f31, rs2==f6, rd==f22, rs1==1065353216, rs2_val==4282384383, rm_val==0
// opcode: fadd ; op1:f31; op2:f6; dest:f22; op1val:0x3f800000;  op2val:0xff3fffff; valaddr_reg:x16; val_offset:248; rmval:0x0
TEST_FPRR_OP(fadd, f22, f31, f6, 0x0, x16, 248, x17, x15, 124)

inst_32:
// rs1==2134900735, rs2_val==4282384383, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x7f3fffff;  op2val:0xff3fffff; valaddr_reg:x16; val_offset:256; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 256, x17, x15, 128)

inst_33:
// rs1==2139095040, rs2_val==4282384383, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x7f800000;  op2val:0xff3fffff; valaddr_reg:x16; val_offset:264; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 264, x17, x15, 132)

inst_34:
// rs1==4286578689, rs2_val==4282384383, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0xff800001;  op2val:0xff3fffff; valaddr_reg:x16; val_offset:272; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 272, x17, x15, 136)

inst_35:
// rs1==1000, rs2_val==4282384383, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x3e8;  op2val:0xff3fffff; valaddr_reg:x16; val_offset:280; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 280, x17, x15, 140)

inst_36:
// rs1==4286578688, rs2_val==931436989, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0xff800000;  op2val:0x378499bd; valaddr_reg:x16; val_offset:288; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 288, x17, x15, 144)

inst_37:
// rs1==4282384383, rs2_val==3212836864, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0xff3fffff;  op2val:0xbf800000; valaddr_reg:x16; val_offset:296; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 296, x17, x15, 148)

inst_38:
// rs1==3212837490, rs2_val==4112675613, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0xbf800272;  op2val:0xf522731d; valaddr_reg:x16; val_offset:304; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 304, x17, x15, 152)

inst_39:
// rs1==3212836864, rs2_val==1007635319, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0xbf800000;  op2val:0x3c0f4b77; valaddr_reg:x16; val_offset:312; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 312, x17, x15, 156)

inst_40:
// rs1==3212836864, rs2_val==494341095, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0xbf800000;  op2val:0x1d770be7; valaddr_reg:x16; val_offset:320; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 320, x17, x15, 160)

inst_41:
// rs1==3212836864, rs2_val==473225157, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0xbf800000;  op2val:0x1c34d7c5; valaddr_reg:x16; val_offset:328; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 328, x17, x15, 164)

inst_42:
// rs1==3212836864, rs2_val==404777940, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0xbf800000;  op2val:0x18206bd4; valaddr_reg:x16; val_offset:336; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 336, x17, x15, 168)

inst_43:
// rs1==3212836864, rs2_val==410068426, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0xbf800000;  op2val:0x187125ca; valaddr_reg:x16; val_offset:344; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 344, x17, x15, 172)

inst_44:
// rs1==2147483648, rs2_val==3212836864, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x80000000;  op2val:0xbf800000; valaddr_reg:x16; val_offset:352; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 352, x17, x15, 176)

inst_45:
// rs1==0, rs2_val==3212836864, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x0;  op2val:0xbf800000; valaddr_reg:x16; val_offset:360; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 360, x17, x15, 180)

inst_46:
// rs1==1065353216, rs2_val==1851726282, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x3f800000;  op2val:0x6e5f19ca; valaddr_reg:x16; val_offset:368; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 368, x17, x15, 184)

inst_47:
// rs1==1065353216, rs2_val==3212836864, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x3f800000;  op2val:0xbf800000; valaddr_reg:x16; val_offset:376; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 376, x17, x15, 188)

inst_48:
// rs1==1065353216, rs2_val==3811385664, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x3f800000;  op2val:0xe32d2140; valaddr_reg:x16; val_offset:384; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 384, x17, x15, 192)

inst_49:
// rs1==1065353216, rs2_val==3216075852, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x3f800000;  op2val:0xbfb16c4c; valaddr_reg:x16; val_offset:392; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 392, x17, x15, 196)

inst_50:
// rs1==2134900735, rs2_val==3212836864, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x7f3fffff;  op2val:0xbf800000; valaddr_reg:x16; val_offset:400; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 400, x17, x15, 200)

inst_51:
// rs1==2139095040, rs2_val==3212836864, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x7f800000;  op2val:0xbf800000; valaddr_reg:x16; val_offset:408; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 408, x17, x15, 204)

inst_52:
// rs1==4286578689, rs2_val==3212836864, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0xff800001;  op2val:0xbf800000; valaddr_reg:x16; val_offset:416; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 416, x17, x15, 208)

inst_53:
// rs1==4286578689, rs2_val==498253995, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0xff800001;  op2val:0x1db2c0ab; valaddr_reg:x16; val_offset:424; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 424, x17, x15, 212)

inst_54:
// rs1==1000, rs2_val==1765901963, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x3e8;  op2val:0x6941868b; valaddr_reg:x16; val_offset:432; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 432, x17, x15, 216)

inst_55:
// rs1==4286578688, rs2_val==3212836864, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0xff800000;  op2val:0xbf800000; valaddr_reg:x16; val_offset:440; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 440, x17, x15, 220)

inst_56:
// rs1==3212836864, rs2_val==3212836864, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0xbf800000;  op2val:0xbf800000; valaddr_reg:x16; val_offset:448; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 448, x17, x15, 224)

inst_57:
// rs1==978259804, rs2_val==3212836864, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x3a4f0f5c;  op2val:0xbf800000; valaddr_reg:x16; val_offset:456; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 456, x17, x15, 228)

inst_58:
// rs1==1000, rs2_val==3212836864, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x3e8;  op2val:0xbf800000; valaddr_reg:x16; val_offset:464; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 464, x17, x15, 232)

inst_59:
// rs1==3214125826, rs2_val==3212836864, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0xbf93ab02;  op2val:0xbf800000; valaddr_reg:x16; val_offset:472; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 472, x17, x15, 236)

inst_60:
// rs1==1261233011, rs2_val==3212836864, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x4b2ce373;  op2val:0xbf800000; valaddr_reg:x16; val_offset:480; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 480, x17, x15, 240)

inst_61:
// rs1==3212836872, rs2_val==3212836864, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0xbf800008;  op2val:0xbf800000; valaddr_reg:x16; val_offset:488; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 488, x17, x15, 244)

inst_62:
// rs1==1716915814, rs2_val==3212836864, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x66560e66;  op2val:0xbf800000; valaddr_reg:x16; val_offset:496; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 496, x17, x15, 248)

inst_63:
// rs1==4286578688, rs2_val==2147483648, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0xff800000;  op2val:0x80000000; valaddr_reg:x16; val_offset:504; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 504, x17, x15, 252)

inst_64:
// rs1==4282384383, rs2_val==2147483648, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0xff3fffff;  op2val:0x80000000; valaddr_reg:x16; val_offset:512; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 512, x17, x15, 256)

inst_65:
// rs1==411200997, rs2_val==2147483648, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x18826de5;  op2val:0x80000000; valaddr_reg:x16; val_offset:520; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 520, x17, x15, 260)

inst_66:
// rs1==3212836864, rs2_val==2147483648, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0xbf800000;  op2val:0x80000000; valaddr_reg:x16; val_offset:528; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 528, x17, x15, 264)

inst_67:
// rs1==2147483648, rs2_val==2147483648, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x80000000;  op2val:0x80000000; valaddr_reg:x16; val_offset:536; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 536, x17, x15, 268)

inst_68:
// rs1==0, rs2_val==2147483648, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x0;  op2val:0x80000000; valaddr_reg:x16; val_offset:544; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 544, x17, x15, 272)

inst_69:
// rs1==1065353216, rs2_val==2147483648, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x3f800000;  op2val:0x80000000; valaddr_reg:x16; val_offset:552; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 552, x17, x15, 276)

inst_70:
// rs1==2134900735, rs2_val==2147483648, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x7f3fffff;  op2val:0x80000000; valaddr_reg:x16; val_offset:560; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 560, x17, x15, 280)

inst_71:
// rs1==2139095040, rs2_val==2147483648, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x7f800000;  op2val:0x80000000; valaddr_reg:x16; val_offset:568; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 568, x17, x15, 284)

inst_72:
// rs1==4286578689, rs2_val==2147483648, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0xff800001;  op2val:0x80000000; valaddr_reg:x16; val_offset:576; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 576, x17, x15, 288)

inst_73:
// rs1==1000, rs2_val==2147483648, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x3e8;  op2val:0x80000000; valaddr_reg:x16; val_offset:584; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 584, x17, x15, 292)

inst_74:
// rs1==4286578688, rs2_val==0, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0xff800000;  op2val:0x0; valaddr_reg:x16; val_offset:592; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 592, x17, x15, 296)

inst_75:
// rs1==4282384383, rs2_val==0, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0xff3fffff;  op2val:0x0; valaddr_reg:x16; val_offset:600; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 600, x17, x15, 300)

inst_76:
// rs1==3678060935, rs2_val==0, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0xdb3ac187;  op2val:0x0; valaddr_reg:x16; val_offset:608; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 608, x17, x15, 304)

inst_77:
// rs1==3212836864, rs2_val==0, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0xbf800000;  op2val:0x0; valaddr_reg:x16; val_offset:616; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 616, x17, x15, 308)

inst_78:
// rs1==2147483648, rs2_val==0, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x80000000;  op2val:0x0; valaddr_reg:x16; val_offset:624; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 624, x17, x15, 312)

inst_79:
// rs1==0, rs2_val==0, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x0;  op2val:0x0; valaddr_reg:x16; val_offset:632; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 632, x17, x15, 316)

inst_80:
// rs1==1065353216, rs2_val==0, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x3f800000;  op2val:0x0; valaddr_reg:x16; val_offset:640; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 640, x17, x15, 320)

inst_81:
// rs1==2134900735, rs2_val==0, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x7f3fffff;  op2val:0x0; valaddr_reg:x16; val_offset:648; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 648, x17, x15, 324)

inst_82:
// rs1==2139095040, rs2_val==0, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x7f800000;  op2val:0x0; valaddr_reg:x16; val_offset:656; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 656, x17, x15, 328)

inst_83:
// rs1==4286578689, rs2_val==0, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0xff800001;  op2val:0x0; valaddr_reg:x16; val_offset:664; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 664, x17, x15, 332)

inst_84:
// rs1==1000, rs2_val==0, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x3e8;  op2val:0x0; valaddr_reg:x16; val_offset:672; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 672, x17, x15, 336)

inst_85:
// rs1==4286578688, rs2_val==1065353216, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0xff800000;  op2val:0x3f800000; valaddr_reg:x16; val_offset:680; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 680, x17, x15, 340)

inst_86:
// rs1==4282384383, rs2_val==1065353216, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0xff3fffff;  op2val:0x3f800000; valaddr_reg:x16; val_offset:688; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 688, x17, x15, 344)

inst_87:
// rs1==1766918642, rs2_val==1065353216, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x695109f2;  op2val:0x3f800000; valaddr_reg:x16; val_offset:696; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 696, x17, x15, 348)

inst_88:
// rs1==3212836864, rs2_val==1065353216, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0xbf800000;  op2val:0x3f800000; valaddr_reg:x16; val_offset:704; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 704, x17, x15, 352)

inst_89:
// rs1==2147483648, rs2_val==1065353216, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x80000000;  op2val:0x3f800000; valaddr_reg:x16; val_offset:712; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 712, x17, x15, 356)

inst_90:
// rs1==0, rs2_val==1065353216, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x0;  op2val:0x3f800000; valaddr_reg:x16; val_offset:720; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 720, x17, x15, 360)

inst_91:
// rs1==1065353216, rs2_val==1065353216, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x3f800000;  op2val:0x3f800000; valaddr_reg:x16; val_offset:728; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 728, x17, x15, 364)

inst_92:
// rs1==344035790, rs2_val==1065353216, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x148191ce;  op2val:0x3f800000; valaddr_reg:x16; val_offset:736; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 736, x17, x15, 368)

inst_93:
// rs1==2134900735, rs2_val==1065353216, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x7f3fffff;  op2val:0x3f800000; valaddr_reg:x16; val_offset:744; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 744, x17, x15, 372)

inst_94:
// rs1==2139095040, rs2_val==1065353216, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x7f800000;  op2val:0x3f800000; valaddr_reg:x16; val_offset:752; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 752, x17, x15, 376)

inst_95:
// rs1==4286578689, rs2_val==1065353216, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0xff800001;  op2val:0x3f800000; valaddr_reg:x16; val_offset:760; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 760, x17, x15, 380)

inst_96:
// rs1==1000, rs2_val==1065353216, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x3e8;  op2val:0x3f800000; valaddr_reg:x16; val_offset:768; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 768, x17, x15, 384)

inst_97:
// rs1==2455450415, rs2_val==1065353216, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x925b332f;  op2val:0x3f800000; valaddr_reg:x16; val_offset:776; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 776, x17, x15, 388)

inst_98:
// rs1==2167035883, rs2_val==1065353216, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x812a57eb;  op2val:0x3f800000; valaddr_reg:x16; val_offset:784; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 784, x17, x15, 392)

inst_99:
// rs1==3256100174, rs2_val==1065353216, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0xc214254e;  op2val:0x3f800000; valaddr_reg:x16; val_offset:792; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 792, x17, x15, 396)

inst_100:
// rs1==660029022, rs2_val==1065353216, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x27573e5e;  op2val:0x3f800000; valaddr_reg:x16; val_offset:800; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 800, x17, x15, 400)

inst_101:
// rs1==4286578688, rs2_val==1143788357, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0xff800000;  op2val:0x442cd345; valaddr_reg:x16; val_offset:808; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 808, x17, x15, 404)

inst_102:
// rs1==4282384383, rs2_val==2941274438, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0xff3fffff;  op2val:0xaf504946; valaddr_reg:x16; val_offset:816; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 816, x17, x15, 408)

inst_103:
// rs1==3644569515, rs2_val==344685901, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0xd93bb7ab;  op2val:0x148b7d4d; valaddr_reg:x16; val_offset:824; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 824, x17, x15, 412)

inst_104:
// rs1==3212836864, rs2_val==911835653, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0xbf800000;  op2val:0x36598205; valaddr_reg:x16; val_offset:832; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 832, x17, x15, 416)

inst_105:
// rs1==3212836864, rs2_val==2217039639, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0xbf800000;  op2val:0x84255717; valaddr_reg:x16; val_offset:840; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 840, x17, x15, 420)

inst_106:
// rs1==3212836864, rs2_val==1068271632, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0xbf800000;  op2val:0x3fac8810; valaddr_reg:x16; val_offset:848; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 848, x17, x15, 424)

inst_107:
// rs1==3212836864, rs2_val==878111870, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0xbf800000;  op2val:0x3456ec7e; valaddr_reg:x16; val_offset:856; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 856, x17, x15, 428)

inst_108:
// rs1==1065353216, rs2_val==860477601, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x3f800000;  op2val:0x3349d8a1; valaddr_reg:x16; val_offset:864; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 864, x17, x15, 432)

inst_109:
// rs1==1065353216, rs2_val==2600881563, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x3f800000;  op2val:0x9b064d9b; valaddr_reg:x16; val_offset:872; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 872, x17, x15, 436)

inst_110:
// rs1==1065353216, rs2_val==503459232, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x3f800000;  op2val:0x1e022da0; valaddr_reg:x16; val_offset:880; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 880, x17, x15, 440)

inst_111:
// rs1==2134900735, rs2_val==1175025555, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x7f3fffff;  op2val:0x46097793; valaddr_reg:x16; val_offset:888; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 888, x17, x15, 444)

inst_112:
// rs1==2139095040, rs2_val==877106083, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x7f800000;  op2val:0x344793a3; valaddr_reg:x16; val_offset:896; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 896, x17, x15, 448)

inst_113:
// rs1==4286578689, rs2_val==3540120287, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0xff800001;  op2val:0xd301f2df; valaddr_reg:x16; val_offset:904; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 904, x17, x15, 452)

inst_114:
// rs1==4286578688, rs2_val==2134900735, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0xff800000;  op2val:0x7f3fffff; valaddr_reg:x16; val_offset:912; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 912, x17, x15, 456)

inst_115:
// rs1==4282384383, rs2_val==2134900735, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0xff3fffff;  op2val:0x7f3fffff; valaddr_reg:x16; val_offset:920; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 920, x17, x15, 460)

inst_116:
// rs1==1750164740, rs2_val==2134900735, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x68516504;  op2val:0x7f3fffff; valaddr_reg:x16; val_offset:928; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 928, x17, x15, 464)

inst_117:
// rs1==3212836864, rs2_val==2134900735, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0xbf800000;  op2val:0x7f3fffff; valaddr_reg:x16; val_offset:936; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 936, x17, x15, 468)

inst_118:
// rs1==2147483648, rs2_val==2134900735, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x80000000;  op2val:0x7f3fffff; valaddr_reg:x16; val_offset:944; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 944, x17, x15, 472)

inst_119:
// rs1==0, rs2_val==2134900735, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x0;  op2val:0x7f3fffff; valaddr_reg:x16; val_offset:952; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 952, x17, x15, 476)

inst_120:
// rs1==1065353216, rs2_val==2134900735, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x3f800000;  op2val:0x7f3fffff; valaddr_reg:x16; val_offset:960; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 960, x17, x15, 480)

inst_121:
// rs1==2134900735, rs2_val==2134900735, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x7f3fffff;  op2val:0x7f3fffff; valaddr_reg:x16; val_offset:968; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 968, x17, x15, 484)

inst_122:
// rs1==2139095040, rs2_val==2134900735, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x7f800000;  op2val:0x7f3fffff; valaddr_reg:x16; val_offset:976; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 976, x17, x15, 488)

inst_123:
// rs1==4286578689, rs2_val==2134900735, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0xff800001;  op2val:0x7f3fffff; valaddr_reg:x16; val_offset:984; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 984, x17, x15, 492)

inst_124:
// rs1==1000, rs2_val==2134900735, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x3e8;  op2val:0x7f3fffff; valaddr_reg:x16; val_offset:992; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 992, x17, x15, 496)

inst_125:
// rs1==4286578688, rs2_val==2139095040, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0xff800000;  op2val:0x7f800000; valaddr_reg:x16; val_offset:1000; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 1000, x17, x15, 500)

inst_126:
// rs1==4282384383, rs2_val==2139095040, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0xff3fffff;  op2val:0x7f800000; valaddr_reg:x16; val_offset:1008; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 1008, x17, x15, 504)

inst_127:
// rs1==1006804761, rs2_val==2139095040, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x3c029f19;  op2val:0x7f800000; valaddr_reg:x16; val_offset:1016; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 1016, x17, x15, 508)

inst_128:
// rs1==3212836864, rs2_val==2139095040, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0xbf800000;  op2val:0x7f800000; valaddr_reg:x16; val_offset:1024; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 1024, x17, x15, 512)

inst_129:
// rs1==2147483648, rs2_val==2139095040, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x80000000;  op2val:0x7f800000; valaddr_reg:x16; val_offset:1032; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 1032, x17, x15, 516)

inst_130:
// rs1==0, rs2_val==2139095040, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x0;  op2val:0x7f800000; valaddr_reg:x16; val_offset:1040; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 1040, x17, x15, 520)

inst_131:
// rs1==1065353216, rs2_val==2139095040, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x3f800000;  op2val:0x7f800000; valaddr_reg:x16; val_offset:1048; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 1048, x17, x15, 524)

inst_132:
// rs1==2134900735, rs2_val==2139095040, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x7f3fffff;  op2val:0x7f800000; valaddr_reg:x16; val_offset:1056; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 1056, x17, x15, 528)

inst_133:
// rs1==2139095040, rs2_val==2139095040, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x7f800000;  op2val:0x7f800000; valaddr_reg:x16; val_offset:1064; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 1064, x17, x15, 532)

inst_134:
// rs1==4286578689, rs2_val==2139095040, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0xff800001;  op2val:0x7f800000; valaddr_reg:x16; val_offset:1072; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 1072, x17, x15, 536)

inst_135:
// rs1==1000, rs2_val==2139095040, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x3e8;  op2val:0x7f800000; valaddr_reg:x16; val_offset:1080; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 1080, x17, x15, 540)

inst_136:
// rs1==4286578688, rs2_val==4286578689, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0xff800000;  op2val:0xff800001; valaddr_reg:x16; val_offset:1088; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 1088, x17, x15, 544)

inst_137:
// rs1==4282384383, rs2_val==4286578689, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0xff3fffff;  op2val:0xff800001; valaddr_reg:x16; val_offset:1096; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 1096, x17, x15, 548)

inst_138:
// rs1==3218655074, rs2_val==4286578689, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0xbfd8c762;  op2val:0xff800001; valaddr_reg:x16; val_offset:1104; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 1104, x17, x15, 552)

inst_139:
// rs1==3212836864, rs2_val==4286578689, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0xbf800000;  op2val:0xff800001; valaddr_reg:x16; val_offset:1112; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 1112, x17, x15, 556)

inst_140:
// rs1==2147483648, rs2_val==4286578689, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x80000000;  op2val:0xff800001; valaddr_reg:x16; val_offset:1120; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 1120, x17, x15, 560)

inst_141:
// rs1==0, rs2_val==4286578689, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x0;  op2val:0xff800001; valaddr_reg:x16; val_offset:1128; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 1128, x17, x15, 564)

inst_142:
// rs1==1065353216, rs2_val==4286578689, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x3f800000;  op2val:0xff800001; valaddr_reg:x16; val_offset:1136; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 1136, x17, x15, 568)

inst_143:
// rs1==2134900735, rs2_val==4286578689, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x7f3fffff;  op2val:0xff800001; valaddr_reg:x16; val_offset:1144; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 1144, x17, x15, 572)

inst_144:
// rs1==2139095040, rs2_val==4286578689, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x7f800000;  op2val:0xff800001; valaddr_reg:x16; val_offset:1152; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 1152, x17, x15, 576)

inst_145:
// rs1==4286578689, rs2_val==4286578689, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0xff800001;  op2val:0xff800001; valaddr_reg:x16; val_offset:1160; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 1160, x17, x15, 580)

inst_146:
// rs1==1000, rs2_val==4286578689, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x3e8;  op2val:0xff800001; valaddr_reg:x16; val_offset:1168; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 1168, x17, x15, 584)

inst_147:
// rs1==1664301201, rs2_val==4286578689, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x63333891;  op2val:0xff800001; valaddr_reg:x16; val_offset:1176; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 1176, x17, x15, 588)

inst_148:
// rs1==4286578688, rs2_val==1000, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0xff800000;  op2val:0x3e8; valaddr_reg:x16; val_offset:1184; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 1184, x17, x15, 592)

inst_149:
// rs1==4282384383, rs2_val==1000, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0xff3fffff;  op2val:0x3e8; valaddr_reg:x16; val_offset:1192; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 1192, x17, x15, 596)

inst_150:
// rs1==3212836864, rs2_val==1000, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0xbf800000;  op2val:0x3e8; valaddr_reg:x16; val_offset:1200; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 1200, x17, x15, 600)

inst_151:
// rs1==2147483648, rs2_val==1000, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x80000000;  op2val:0x3e8; valaddr_reg:x16; val_offset:1208; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 1208, x17, x15, 604)

inst_152:
// rs1==0, rs2_val==1000, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x0;  op2val:0x3e8; valaddr_reg:x16; val_offset:1216; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 1216, x17, x15, 608)

inst_153:
// rs1==1065353216, rs2_val==1000, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x3f800000;  op2val:0x3e8; valaddr_reg:x16; val_offset:1224; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 1224, x17, x15, 612)

inst_154:
// rs1==894248311, rs2_val==1000, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x354d2577;  op2val:0x3e8; valaddr_reg:x16; val_offset:1232; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 1232, x17, x15, 616)

inst_155:
// rs1==2134900735, rs2_val==1000, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x7f3fffff;  op2val:0x3e8; valaddr_reg:x16; val_offset:1240; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 1240, x17, x15, 620)

inst_156:
// rs1==2139095040, rs2_val==1000, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x7f800000;  op2val:0x3e8; valaddr_reg:x16; val_offset:1248; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 1248, x17, x15, 624)

inst_157:
// rs1==4286578689, rs2_val==1000, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0xff800001;  op2val:0x3e8; valaddr_reg:x16; val_offset:1256; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 1256, x17, x15, 628)

inst_158:
// rs1==1000, rs2_val==1000, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x3e8;  op2val:0x3e8; valaddr_reg:x16; val_offset:1264; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 1264, x17, x15, 632)

inst_159:
// rs1==4286578688, rs2_val==4286578688, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0xff800000;  op2val:0xff800000; valaddr_reg:x16; val_offset:1272; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 1272, x17, x15, 636)

inst_160:
// rs1==1783561161, rs2_val==4286578688, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x6a4efbc9;  op2val:0xff800000; valaddr_reg:x16; val_offset:1280; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 1280, x17, x15, 640)

inst_161:
// rs1==989940348, rs2_val==4282384383, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x3b014a7c;  op2val:0xff3fffff; valaddr_reg:x16; val_offset:1288; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 1288, x17, x15, 644)

inst_162:
// rs1==1762956626, rs2_val==4282384383, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x69149552;  op2val:0xff3fffff; valaddr_reg:x16; val_offset:1296; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 1296, x17, x15, 648)

inst_163:
// rs1==4286578688, rs2_val==3212836866, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0xff800000;  op2val:0xbf800002; valaddr_reg:x16; val_offset:1304; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 1304, x17, x15, 652)

inst_164:
// rs1==4282384383, rs2_val==3212836941, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0xff3fffff;  op2val:0xbf80004d; valaddr_reg:x16; val_offset:1312; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 1312, x17, x15, 656)

inst_165:
// rs1==3212836864, rs2_val==3246763277, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0xbf800000;  op2val:0xc185ad0d; valaddr_reg:x16; val_offset:1320; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 1320, x17, x15, 660)

inst_166:
// rs1==3212836864, rs2_val==451987907, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0xbf800000;  op2val:0x1af0c9c3; valaddr_reg:x16; val_offset:1328; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 1328, x17, x15, 664)

inst_167:
// rs1==3212836864, rs2_val==1015215988, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0xbf800000;  op2val:0x3c82f774; valaddr_reg:x16; val_offset:1336; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 1336, x17, x15, 668)

inst_168:
// rs1==2147483648, rs2_val==1850259139, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x80000000;  op2val:0x6e48b6c3; valaddr_reg:x16; val_offset:1344; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 1344, x17, x15, 672)

inst_169:
// rs1==0, rs2_val==1750968750, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x0;  op2val:0x685da9ae; valaddr_reg:x16; val_offset:1352; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 1352, x17, x15, 676)

inst_170:
// rs1==1065353216, rs2_val==3291907259, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x3f800000;  op2val:0xc43684bb; valaddr_reg:x16; val_offset:1360; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 1360, x17, x15, 680)

inst_171:
// rs1==1065353216, rs2_val==2069760567, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x3f800000;  op2val:0x7b5e0a37; valaddr_reg:x16; val_offset:1368; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 1368, x17, x15, 684)

inst_172:
// rs1==1065353216, rs2_val==3213030358, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x3f800000;  op2val:0xbf82f3d6; valaddr_reg:x16; val_offset:1376; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 1376, x17, x15, 688)

inst_173:
// rs1==403638764, rs2_val==2051852256, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x180f09ec;  op2val:0x7a4cc7e0; valaddr_reg:x16; val_offset:1384; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 1384, x17, x15, 692)

inst_174:
// rs1==2139095040, rs2_val==3212837597, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x7f800000;  op2val:0xbf8002dd; valaddr_reg:x16; val_offset:1392; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 1392, x17, x15, 696)

inst_175:
// rs1==4286578689, rs2_val==422884805, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0xff800001;  op2val:0x1934b5c5; valaddr_reg:x16; val_offset:1400; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 1400, x17, x15, 700)

inst_176:
// rs1==4286578689, rs2_val==3212842957, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0xff800001;  op2val:0xbf8017cd; valaddr_reg:x16; val_offset:1408; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 1408, x17, x15, 704)

inst_177:
// rs1==1000, rs2_val==881125894, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x3e8;  op2val:0x3484ea06; valaddr_reg:x16; val_offset:1416; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 1416, x17, x15, 708)

inst_178:
// rs1==1731077658, rs2_val==3212836864, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x672e261a;  op2val:0xbf800000; valaddr_reg:x16; val_offset:1424; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 1424, x17, x15, 712)

inst_179:
// rs1==927644731, rs2_val==3212836864, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x374abc3b;  op2val:0xbf800000; valaddr_reg:x16; val_offset:1432; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 1432, x17, x15, 716)

inst_180:
// rs1==3413743018, rs2_val==3212836864, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0xcb7995aa;  op2val:0xbf800000; valaddr_reg:x16; val_offset:1440; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 1440, x17, x15, 720)

inst_181:
// rs1==3230262724, rs2_val==3212836864, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0xc089e5c4;  op2val:0xbf800000; valaddr_reg:x16; val_offset:1448; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 1448, x17, x15, 724)

inst_182:
// rs1==1831083315, rs2_val==3212836864, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x6d241d33;  op2val:0xbf800000; valaddr_reg:x16; val_offset:1456; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 1456, x17, x15, 728)

inst_183:
// rs1==452341508, rs2_val==3212836864, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x1af62f04;  op2val:0xbf800000; valaddr_reg:x16; val_offset:1464; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 1464, x17, x15, 732)

inst_184:
// rs1==1065353290, rs2_val==3212836864, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x3f80004a;  op2val:0xbf800000; valaddr_reg:x16; val_offset:1472; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 1472, x17, x15, 736)

inst_185:
// rs1==1733405509, rs2_val==2147483648, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x6751ab45;  op2val:0x80000000; valaddr_reg:x16; val_offset:1480; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 1480, x17, x15, 740)

inst_186:
// rs1==964864570, rs2_val==0, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x3982aa3a;  op2val:0x0; valaddr_reg:x16; val_offset:1488; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 1488, x17, x15, 744)

inst_187:
// rs1==3711056711, rs2_val==1065353216, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0xdd323b47;  op2val:0x3f800000; valaddr_reg:x16; val_offset:1496; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 1496, x17, x15, 748)

inst_188:
// rs1==776673102, rs2_val==1065353216, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x2e4b174e;  op2val:0x3f800000; valaddr_reg:x16; val_offset:1504; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 1504, x17, x15, 752)

inst_189:
// rs1==353156411, rs2_val==1065353216, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x150cbd3b;  op2val:0x3f800000; valaddr_reg:x16; val_offset:1512; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 1512, x17, x15, 756)

inst_190:
// rs1==2521409199, rs2_val==1065353216, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x9649a6af;  op2val:0x3f800000; valaddr_reg:x16; val_offset:1520; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 1520, x17, x15, 760)

inst_191:
// rs1==1116480949, rs2_val==1065353216, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x428c25b5;  op2val:0x3f800000; valaddr_reg:x16; val_offset:1528; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 1528, x17, x15, 764)

inst_192:
// rs1==1716651608, rs2_val==1065353216, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x66520658;  op2val:0x3f800000; valaddr_reg:x16; val_offset:1536; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 1536, x17, x15, 768)

inst_193:
// rs1==1065356089, rs2_val==1065353216, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x3f800b39;  op2val:0x3f800000; valaddr_reg:x16; val_offset:1544; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 1544, x17, x15, 772)

inst_194:
// rs1==4286578688, rs2_val==894943584, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0xff800000;  op2val:0x3557c160; valaddr_reg:x16; val_offset:1552; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 1552, x17, x15, 776)

inst_195:
// rs1==4282384383, rs2_val==2033529460, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0xff3fffff;  op2val:0x79353274; valaddr_reg:x16; val_offset:1560; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 1560, x17, x15, 780)

inst_196:
// rs1==412097120, rs2_val==1863735466, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x18901a60;  op2val:0x6f1658aa; valaddr_reg:x16; val_offset:1568; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 1568, x17, x15, 784)

inst_197:
// rs1==3212836864, rs2_val==1396061061, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0xbf800000;  op2val:0x53363385; valaddr_reg:x16; val_offset:1576; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 1576, x17, x15, 788)

inst_198:
// rs1==3212836864, rs2_val==3477074617, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0xbf800000;  op2val:0xcf3ff2b9; valaddr_reg:x16; val_offset:1584; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 1584, x17, x15, 792)

inst_199:
// rs1==3212836864, rs2_val==3879012204, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0xbf800000;  op2val:0xe735076c; valaddr_reg:x16; val_offset:1592; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 1592, x17, x15, 796)

inst_200:
// rs1==3212836864, rs2_val==1066011046, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0xbf800000;  op2val:0x3f8a09a6; valaddr_reg:x16; val_offset:1600; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 1600, x17, x15, 800)

inst_201:
// rs1==1065353216, rs2_val==1065435582, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x3f800000;  op2val:0x3f8141be; valaddr_reg:x16; val_offset:1608; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 1608, x17, x15, 804)

inst_202:
// rs1==1065353216, rs2_val==1562445518, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x3f800000;  op2val:0x5d2106ce; valaddr_reg:x16; val_offset:1616; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 1616, x17, x15, 808)

inst_203:
// rs1==1065353216, rs2_val==860214014, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x3f800000;  op2val:0x3345d2fe; valaddr_reg:x16; val_offset:1624; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 1624, x17, x15, 812)

inst_204:
// rs1==1065353216, rs2_val==3813303219, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x3f800000;  op2val:0xe34a63b3; valaddr_reg:x16; val_offset:1632; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 1632, x17, x15, 816)

inst_205:
// rs1==2134900735, rs2_val==2536311496, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x7f3fffff;  op2val:0x972d0ac8; valaddr_reg:x16; val_offset:1640; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 1640, x17, x15, 820)

inst_206:
// rs1==2139095040, rs2_val==1595004610, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x7f800000;  op2val:0x5f11d6c2; valaddr_reg:x16; val_offset:1648; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 1648, x17, x15, 824)

inst_207:
// rs1==4286578689, rs2_val==1186009154, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0xff800001;  op2val:0x46b11042; valaddr_reg:x16; val_offset:1656; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 1656, x17, x15, 828)

inst_208:
// rs1==4286578689, rs2_val==2937312720, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0xff800001;  op2val:0xaf13d5d0; valaddr_reg:x16; val_offset:1664; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 1664, x17, x15, 832)

inst_209:
// rs1==1011252716, rs2_val==4286578689, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0x3c467dec;  op2val:0xff800001; valaddr_reg:x16; val_offset:1672; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 1672, x17, x15, 836)

inst_210:
// rs1==3212837440, rs2_val==1000, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0xbf800240;  op2val:0x3e8; valaddr_reg:x16; val_offset:1680; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 1680, x17, x15, 840)

inst_211:
// rs1==4150828142, rs2_val==1000, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0xf7689c6e;  op2val:0x3e8; valaddr_reg:x16; val_offset:1688; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 1688, x17, x15, 844)

inst_212:
// rs1==3389919280, rs2_val==4286578688, rm_val==0
// opcode: fadd ; op1:f10; op2:f11; dest:f12; op1val:0xca0e1030;  op2val:0xff800000; valaddr_reg:x16; val_offset:1696; rmval:0x0
TEST_FPRR_OP(fadd, f12, f10, f11, 0x0, x16, 1696, x17, x15, 848)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
test_fp:
.word 0xff800000
.word 0xff800000
.word 0xff3fffff
.word 0xff800000
.word 0xca0e1030
.word 0xff800000
.word 0xbf800000
.word 0xff800000
.word 0xbf800000
.word 0xff800000
.word 0xbf800000
.word 0xff800000
.word 0xbf800000
.word 0xff800000
.word 0xbf800000
.word 0xff800000
.word 0x80000000
.word 0xff800000
.word 0x0
.word 0xff800000
.word 0x3f800000
.word 0xff800000
.word 0x3f800000
.word 0xff800000
.word 0x3f800000
.word 0xff800000
.word 0x3f800000
.word 0xff800000
.word 0x3f800000
.word 0xff800000
.word 0x3f80002a
.word 0xff800000
.word 0x7f3fffff
.word 0xff800000
.word 0x7f800000
.word 0xff800000
.word 0xff800001
.word 0xff800000
.word 0xff800001
.word 0xff800000
.word 0x3e8
.word 0xff800000
.word 0xff800000
.word 0xff3fffff
.word 0xff3fffff
.word 0xff3fffff
.word 0xe135428e
.word 0xff3fffff
.word 0xbf800000
.word 0xff3fffff
.word 0xbf800000
.word 0xff3fffff
.word 0xbf800000
.word 0xff3fffff
.word 0xbf800000
.word 0xff3fffff
.word 0xbf800000
.word 0xff3fffff
.word 0x80000000
.word 0xff3fffff
.word 0x0
.word 0xff3fffff
.word 0x3f800000
.word 0xff3fffff
.word 0x3f800000
.word 0xff3fffff
.word 0x3f800000
.word 0xff3fffff
.word 0x3f800000
.word 0xff3fffff
.word 0x3f800000
.word 0xff3fffff
.word 0x3f800000
.word 0xff3fffff
.word 0x7f3fffff
.word 0xff3fffff
.word 0x7f800000
.word 0xff3fffff
.word 0xff800001
.word 0xff3fffff
.word 0xff800001
.word 0xff3fffff
.word 0x3e8
.word 0xff3fffff
.word 0xff800000
.word 0x378499bd
.word 0xff3fffff
.word 0xbf800000
.word 0xbf800272
.word 0xf522731d
.word 0xbf800000
.word 0x3c0f4b77
.word 0xbf800000
.word 0x1d770be7
.word 0xbf800000
.word 0x1c34d7c5
.word 0xbf800000
.word 0x18206bd4
.word 0xbf800000
.word 0x187125ca
.word 0x80000000
.word 0xbf800000
.word 0x0
.word 0xbf800000
.word 0x3f800000
.word 0x6e5f19ca
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xe32d2140
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbfb16c4c
.word 0x7f3fffff
.word 0xbf800000
.word 0x7f800000
.word 0xbf800000
.word 0xff800001
.word 0xbf800000
.word 0xff800001
.word 0x1db2c0ab
.word 0x3e8
.word 0x6941868b
.word 0xff800000
.word 0xbf800000
.word 0xff3fffff
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0x80000000
.word 0xbf800000
.word 0x0
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3a4f0f5c
.word 0xbf800000
.word 0x7f3fffff
.word 0xbf800000
.word 0x7f800000
.word 0xbf800000
.word 0xff800001
.word 0xbf800000
.word 0xff800001
.word 0xbf800000
.word 0x3e8
.word 0xbf800000
.word 0xff800000
.word 0xbf800000
.word 0xff3fffff
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0x80000000
.word 0xbf800000
.word 0x0
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x7f3fffff
.word 0xbf800000
.word 0x7f800000
.word 0xbf800000
.word 0xff800001
.word 0xbf800000
.word 0xff800001
.word 0xbf800000
.word 0x3e8
.word 0xbf800000
.word 0xff800000
.word 0xbf800000
.word 0xff3fffff
.word 0xbf800000
.word 0xbf93ab02
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0x80000000
.word 0xbf800000
.word 0x0
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x4b2ce373
.word 0xbf800000
.word 0x7f3fffff
.word 0xbf800000
.word 0x7f800000
.word 0xbf800000
.word 0xff800001
.word 0xbf800000
.word 0xff800001
.word 0xbf800000
.word 0x3e8
.word 0xbf800000
.word 0xff800000
.word 0xbf800000
.word 0xff3fffff
.word 0xbf800000
.word 0xbf800008
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0x80000000
.word 0xbf800000
.word 0x0
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x7f3fffff
.word 0xbf800000
.word 0x7f800000
.word 0xbf800000
.word 0xff800001
.word 0xbf800000
.word 0xff800001
.word 0xbf800000
.word 0x3e8
.word 0xbf800000
.word 0xff800000
.word 0xbf800000
.word 0xff3fffff
.word 0xbf800000
.word 0x66560e66
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0x80000000
.word 0xbf800000
.word 0x0
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x7f3fffff
.word 0xbf800000
.word 0x7f800000
.word 0xbf800000
.word 0xff800001
.word 0xbf800000
.word 0xff800001
.word 0xbf800000
.word 0x3e8
.word 0xbf800000
.word 0xff800000
.word 0x80000000
.word 0xff3fffff
.word 0x80000000
.word 0x18826de5
.word 0x80000000
.word 0xbf800000
.word 0x80000000
.word 0xbf800000
.word 0x80000000
.word 0xbf800000
.word 0x80000000
.word 0xbf800000
.word 0x80000000
.word 0xbf800000
.word 0x80000000
.word 0x80000000
.word 0x80000000
.word 0x0
.word 0x80000000
.word 0x3f800000
.word 0x80000000
.word 0x3f800000
.word 0x80000000
.word 0x3f800000
.word 0x80000000
.word 0x3f800000
.word 0x80000000
.word 0x3f800000
.word 0x80000000
.word 0x3f800000
.word 0x80000000
.word 0x7f3fffff
.word 0x80000000
.word 0x7f800000
.word 0x80000000
.word 0xff800001
.word 0x80000000
.word 0xff800001
.word 0x80000000
.word 0x3e8
.word 0x80000000
.word 0xff800000
.word 0x0
.word 0xff3fffff
.word 0x0
.word 0xdb3ac187
.word 0x0
.word 0xbf800000
.word 0x0
.word 0xbf800000
.word 0x0
.word 0xbf800000
.word 0x0
.word 0xbf800000
.word 0x0
.word 0xbf800000
.word 0x0
.word 0x80000000
.word 0x0
.word 0x0
.word 0x0
.word 0x3f800000
.word 0x0
.word 0x3f800000
.word 0x0
.word 0x3f800000
.word 0x0
.word 0x3f800000
.word 0x0
.word 0x3f800000
.word 0x0
.word 0x3f800000
.word 0x0
.word 0x7f3fffff
.word 0x0
.word 0x7f800000
.word 0x0
.word 0xff800001
.word 0x0
.word 0xff800001
.word 0x0
.word 0x3e8
.word 0x0
.word 0xff800000
.word 0x3f800000
.word 0xff3fffff
.word 0x3f800000
.word 0x695109f2
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0x80000000
.word 0x3f800000
.word 0x0
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x148191ce
.word 0x3f800000
.word 0x7f3fffff
.word 0x3f800000
.word 0x7f800000
.word 0x3f800000
.word 0xff800001
.word 0x3f800000
.word 0xff800001
.word 0x3f800000
.word 0x3e8
.word 0x3f800000
.word 0xff800000
.word 0x3f800000
.word 0xff3fffff
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0x80000000
.word 0x3f800000
.word 0x0
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x925b332f
.word 0x3f800000
.word 0x7f3fffff
.word 0x3f800000
.word 0x7f800000
.word 0x3f800000
.word 0xff800001
.word 0x3f800000
.word 0xff800001
.word 0x3f800000
.word 0x3e8
.word 0x3f800000
.word 0xff800000
.word 0x3f800000
.word 0xff3fffff
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0x80000000
.word 0x3f800000
.word 0x0
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x812a57eb
.word 0x3f800000
.word 0x7f3fffff
.word 0x3f800000
.word 0x7f800000
.word 0x3f800000
.word 0xff800001
.word 0x3f800000
.word 0xff800001
.word 0x3f800000
.word 0x3e8
.word 0x3f800000
.word 0xff800000
.word 0x3f800000
.word 0xff3fffff
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0x80000000
.word 0x3f800000
.word 0x0
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x7f3fffff
.word 0x3f800000
.word 0x7f800000
.word 0x3f800000
.word 0xff800001
.word 0x3f800000
.word 0xff800001
.word 0x3f800000
.word 0x3e8
.word 0x3f800000
.word 0xff800000
.word 0x3f800000
.word 0xff3fffff
.word 0x3f800000
.word 0xc214254e
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0x80000000
.word 0x3f800000
.word 0x0
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x27573e5e
.word 0x3f800000
.word 0x7f3fffff
.word 0x3f800000
.word 0x7f800000
.word 0x3f800000
.word 0xff800001
.word 0x3f800000
.word 0xff800001
.word 0x3f800000
.word 0x3e8
.word 0x3f800000
.word 0xff800000
.word 0x442cd345
.word 0xff3fffff
.word 0xaf504946
.word 0xd93bb7ab
.word 0x148b7d4d
.word 0xbf800000
.word 0x36598205
.word 0xbf800000
.word 0x84255717
.word 0xbf800000
.word 0x3fac8810
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3456ec7e
.word 0x80000000
.word 0x3f800000
.word 0x0
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x3349d8a1
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x9b064d9b
.word 0x3f800000
.word 0x1e022da0
.word 0x3f800000
.word 0x3f800000
.word 0x7f3fffff
.word 0x46097793
.word 0x7f800000
.word 0x344793a3
.word 0xff800001
.word 0xd301f2df
.word 0xff800001
.word 0x3f800000
.word 0x3e8
.word 0x3f800000
.word 0xff800000
.word 0x7f3fffff
.word 0xff3fffff
.word 0x7f3fffff
.word 0x68516504
.word 0x7f3fffff
.word 0xbf800000
.word 0x7f3fffff
.word 0xbf800000
.word 0x7f3fffff
.word 0xbf800000
.word 0x7f3fffff
.word 0xbf800000
.word 0x7f3fffff
.word 0xbf800000
.word 0x7f3fffff
.word 0x80000000
.word 0x7f3fffff
.word 0x0
.word 0x7f3fffff
.word 0x3f800000
.word 0x7f3fffff
.word 0x3f800000
.word 0x7f3fffff
.word 0x3f800000
.word 0x7f3fffff
.word 0x3f800000
.word 0x7f3fffff
.word 0x3f800000
.word 0x7f3fffff
.word 0x3f800000
.word 0x7f3fffff
.word 0x7f3fffff
.word 0x7f3fffff
.word 0x7f800000
.word 0x7f3fffff
.word 0xff800001
.word 0x7f3fffff
.word 0xff800001
.word 0x7f3fffff
.word 0x3e8
.word 0x7f3fffff
.word 0xff800000
.word 0x7f800000
.word 0xff3fffff
.word 0x7f800000
.word 0x3c029f19
.word 0x7f800000
.word 0xbf800000
.word 0x7f800000
.word 0xbf800000
.word 0x7f800000
.word 0xbf800000
.word 0x7f800000
.word 0xbf800000
.word 0x7f800000
.word 0xbf800000
.word 0x7f800000
.word 0x80000000
.word 0x7f800000
.word 0x0
.word 0x7f800000
.word 0x3f800000
.word 0x7f800000
.word 0x3f800000
.word 0x7f800000
.word 0x3f800000
.word 0x7f800000
.word 0x3f800000
.word 0x7f800000
.word 0x3f800000
.word 0x7f800000
.word 0x3f800000
.word 0x7f800000
.word 0x7f3fffff
.word 0x7f800000
.word 0x7f800000
.word 0x7f800000
.word 0xff800001
.word 0x7f800000
.word 0xff800001
.word 0x7f800000
.word 0x3e8
.word 0x7f800000
.word 0xff800000
.word 0xff800001
.word 0xff3fffff
.word 0xff800001
.word 0xbfd8c762
.word 0xff800001
.word 0xbf800000
.word 0xff800001
.word 0xbf800000
.word 0xff800001
.word 0xbf800000
.word 0xff800001
.word 0xbf800000
.word 0xff800001
.word 0xbf800000
.word 0xff800001
.word 0x80000000
.word 0xff800001
.word 0x0
.word 0xff800001
.word 0x3f800000
.word 0xff800001
.word 0x3f800000
.word 0xff800001
.word 0x3f800000
.word 0xff800001
.word 0x3f800000
.word 0xff800001
.word 0x3f800000
.word 0xff800001
.word 0x3f800000
.word 0xff800001
.word 0x7f3fffff
.word 0xff800001
.word 0x7f800000
.word 0xff800001
.word 0xff800001
.word 0xff800001
.word 0xff800001
.word 0xff800001
.word 0x3e8
.word 0xff800001
.word 0xff800000
.word 0xff800001
.word 0xff3fffff
.word 0xff800001
.word 0xbf800000
.word 0xff800001
.word 0xbf800000
.word 0xff800001
.word 0xbf800000
.word 0xff800001
.word 0xbf800000
.word 0xff800001
.word 0xbf800000
.word 0xff800001
.word 0xbf800000
.word 0xff800001
.word 0x80000000
.word 0xff800001
.word 0x0
.word 0xff800001
.word 0x3f800000
.word 0xff800001
.word 0x3f800000
.word 0xff800001
.word 0x3f800000
.word 0xff800001
.word 0x3f800000
.word 0xff800001
.word 0x3f800000
.word 0xff800001
.word 0x63333891
.word 0xff800001
.word 0x7f3fffff
.word 0xff800001
.word 0x7f800000
.word 0xff800001
.word 0xff800001
.word 0xff800001
.word 0xff800001
.word 0xff800001
.word 0x3e8
.word 0xff800001
.word 0xff800000
.word 0x3e8
.word 0xff3fffff
.word 0x3e8
.word 0xbf800000
.word 0x3e8
.word 0xbf800000
.word 0x3e8
.word 0xbf800000
.word 0x3e8
.word 0xbf800000
.word 0x3e8
.word 0xbf800000
.word 0x3e8
.word 0xbf800000
.word 0x3e8
.word 0x80000000
.word 0x3e8
.word 0x0
.word 0x3e8
.word 0x3f800000
.word 0x3e8
.word 0x3f800000
.word 0x3e8
.word 0x3f800000
.word 0x3e8
.word 0x3f800000
.word 0x3e8
.word 0x3f800000
.word 0x3e8
.word 0x354d2577
.word 0x3e8
.word 0x7f3fffff
.word 0x3e8
.word 0x7f800000
.word 0x3e8
.word 0xff800001
.word 0x3e8
.word 0xff800001
.word 0x3e8
.word 0x3e8
.word 0x3e8
.word 0xff800000
.word 0xff800000
.word 0xff3fffff
.word 0xff800000
.word 0x6a4efbc9
.word 0xff800000
.word 0xbf800000
.word 0xff800000
.word 0xbf800000
.word 0xff800000
.word 0xbf800000
.word 0xff800000
.word 0xbf800000
.word 0xff800000
.word 0xbf800000
.word 0xff800000
.word 0x80000000
.word 0xff800000
.word 0x0
.word 0xff800000
.word 0x3f800000
.word 0xff800000
.word 0x3f800000
.word 0xff800000
.word 0x3f800000
.word 0xff800000
.word 0x3f800000
.word 0xff800000
.word 0x3f800000
.word 0xff800000
.word 0x3f800000
.word 0xff800000
.word 0x7f3fffff
.word 0xff800000
.word 0x7f800000
.word 0xff800000
.word 0xff800001
.word 0xff800000
.word 0xff800001
.word 0xff800000
.word 0x3e8
.word 0xff800000
.word 0xff800000
.word 0xff3fffff
.word 0xff3fffff
.word 0xff3fffff
.word 0x3b014a7c
.word 0xff3fffff
.word 0xbf800000
.word 0xff3fffff
.word 0xbf800000
.word 0xff3fffff
.word 0xbf800000
.word 0xff3fffff
.word 0xbf800000
.word 0xff3fffff
.word 0xbf800000
.word 0xff3fffff
.word 0x80000000
.word 0xff3fffff
.word 0x0
.word 0xff3fffff
.word 0x3f800000
.word 0xff3fffff
.word 0x3f800000
.word 0xff3fffff
.word 0x3f800000
.word 0xff3fffff
.word 0x3f800000
.word 0xff3fffff
.word 0x3f800000
.word 0xff3fffff
.word 0x69149552
.word 0xff3fffff
.word 0x7f3fffff
.word 0xff3fffff
.word 0x7f800000
.word 0xff3fffff
.word 0xff800001
.word 0xff3fffff
.word 0xff800001
.word 0xff3fffff
.word 0x3e8
.word 0xff3fffff
.word 0xff800000
.word 0xbf800002
.word 0xff3fffff
.word 0xbf80004d
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xc185ad0d
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0x1af0c9c3
.word 0xbf800000
.word 0x3c82f774
.word 0x80000000
.word 0x6e48b6c3
.word 0x0
.word 0x685da9ae
.word 0x3f800000
.word 0xc43684bb
.word 0x3f800000
.word 0x7b5e0a37
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf82f3d6
.word 0x3f800000
.word 0xbf800000
.word 0x180f09ec
.word 0x7a4cc7e0
.word 0x7f3fffff
.word 0xbf800000
.word 0x7f800000
.word 0xbf8002dd
.word 0xff800001
.word 0x1934b5c5
.word 0xff800001
.word 0xbf8017cd
.word 0x3e8
.word 0x3484ea06
.word 0xff800000
.word 0xbf800000
.word 0xff3fffff
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0x80000000
.word 0xbf800000
.word 0x0
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x672e261a
.word 0xbf800000
.word 0x7f3fffff
.word 0xbf800000
.word 0x7f800000
.word 0xbf800000
.word 0xff800001
.word 0xbf800000
.word 0xff800001
.word 0xbf800000
.word 0x3e8
.word 0xbf800000
.word 0xff800000
.word 0xbf800000
.word 0xff3fffff
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0x80000000
.word 0xbf800000
.word 0x0
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x374abc3b
.word 0xbf800000
.word 0x7f3fffff
.word 0xbf800000
.word 0x7f800000
.word 0xbf800000
.word 0xff800001
.word 0xbf800000
.word 0xff800001
.word 0xbf800000
.word 0x3e8
.word 0xbf800000
.word 0xff800000
.word 0xbf800000
.word 0xff3fffff
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0x80000000
.word 0xbf800000
.word 0x0
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0xcb7995aa
.word 0xbf800000
.word 0x7f3fffff
.word 0xbf800000
.word 0x7f800000
.word 0xbf800000
.word 0xff800001
.word 0xbf800000
.word 0xff800001
.word 0xbf800000
.word 0x3e8
.word 0xbf800000
.word 0xff800000
.word 0xbf800000
.word 0xff3fffff
.word 0xbf800000
.word 0xc089e5c4
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0x80000000
.word 0xbf800000
.word 0x0
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x6d241d33
.word 0xbf800000
.word 0x7f3fffff
.word 0xbf800000
.word 0x7f800000
.word 0xbf800000
.word 0xff800001
.word 0xbf800000
.word 0xff800001
.word 0xbf800000
.word 0x3e8
.word 0xbf800000
.word 0xff800000
.word 0xbf800000
.word 0xff3fffff
.word 0xbf800000
.word 0x1af62f04
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0xbf800000
.word 0x80000000
.word 0xbf800000
.word 0x0
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f80004a
.word 0xbf800000
.word 0x7f3fffff
.word 0xbf800000
.word 0x7f800000
.word 0xbf800000
.word 0xff800001
.word 0xbf800000
.word 0xff800001
.word 0xbf800000
.word 0x3e8
.word 0xbf800000
.word 0xff800000
.word 0x80000000
.word 0xff3fffff
.word 0x80000000
.word 0x6751ab45
.word 0x80000000
.word 0xbf800000
.word 0x80000000
.word 0xbf800000
.word 0x80000000
.word 0xbf800000
.word 0x80000000
.word 0xbf800000
.word 0x80000000
.word 0xbf800000
.word 0x80000000
.word 0x80000000
.word 0x80000000
.word 0x0
.word 0x80000000
.word 0x3f800000
.word 0x80000000
.word 0x3f800000
.word 0x80000000
.word 0x3f800000
.word 0x80000000
.word 0x3f800000
.word 0x80000000
.word 0x3f800000
.word 0x80000000
.word 0x3f800000
.word 0x80000000
.word 0x7f3fffff
.word 0x80000000
.word 0x7f800000
.word 0x80000000
.word 0xff800001
.word 0x80000000
.word 0xff800001
.word 0x80000000
.word 0x3e8
.word 0x80000000
.word 0xff800000
.word 0x0
.word 0xff3fffff
.word 0x0
.word 0x3982aa3a
.word 0x0
.word 0xbf800000
.word 0x0
.word 0xbf800000
.word 0x0
.word 0xbf800000
.word 0x0
.word 0xbf800000
.word 0x0
.word 0xbf800000
.word 0x0
.word 0x80000000
.word 0x0
.word 0x0
.word 0x0
.word 0x3f800000
.word 0x0
.word 0x3f800000
.word 0x0
.word 0x3f800000
.word 0x0
.word 0x3f800000
.word 0x0
.word 0x3f800000
.word 0x0
.word 0x3f800000
.word 0x0
.word 0x7f3fffff
.word 0x0
.word 0x7f800000
.word 0x0
.word 0xff800001
.word 0x0
.word 0xff800001
.word 0x0
.word 0x3e8
.word 0x0
.word 0xff800000
.word 0x3f800000
.word 0xff3fffff
.word 0x3f800000
.word 0xdd323b47
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0x80000000
.word 0x3f800000
.word 0x0
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x2e4b174e
.word 0x3f800000
.word 0x7f3fffff
.word 0x3f800000
.word 0x7f800000
.word 0x3f800000
.word 0xff800001
.word 0x3f800000
.word 0xff800001
.word 0x3f800000
.word 0x3e8
.word 0x3f800000
.word 0xff800000
.word 0x3f800000
.word 0xff3fffff
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0x80000000
.word 0x3f800000
.word 0x0
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x150cbd3b
.word 0x3f800000
.word 0x7f3fffff
.word 0x3f800000
.word 0x7f800000
.word 0x3f800000
.word 0xff800001
.word 0x3f800000
.word 0xff800001
.word 0x3f800000
.word 0x3e8
.word 0x3f800000
.word 0xff800000
.word 0x3f800000
.word 0xff3fffff
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0x80000000
.word 0x3f800000
.word 0x0
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x9649a6af
.word 0x3f800000
.word 0x7f3fffff
.word 0x3f800000
.word 0x7f800000
.word 0x3f800000
.word 0xff800001
.word 0x3f800000
.word 0xff800001
.word 0x3f800000
.word 0x3e8
.word 0x3f800000
.word 0xff800000
.word 0x3f800000
.word 0xff3fffff
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0x80000000
.word 0x3f800000
.word 0x0
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x428c25b5
.word 0x3f800000
.word 0x7f3fffff
.word 0x3f800000
.word 0x7f800000
.word 0x3f800000
.word 0xff800001
.word 0x3f800000
.word 0xff800001
.word 0x3f800000
.word 0x3e8
.word 0x3f800000
.word 0xff800000
.word 0x3f800000
.word 0xff3fffff
.word 0x3f800000
.word 0x66520658
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0xbf800000
.word 0x3f800000
.word 0x80000000
.word 0x3f800000
.word 0x0
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x3f800b39
.word 0x3f800000
.word 0x7f3fffff
.word 0x3f800000
.word 0x7f800000
.word 0x3f800000
.word 0xff800001
.word 0x3f800000
.word 0xff800001
.word 0x3f800000
.word 0x3e8
.word 0x3f800000
.word 0xff800000
.word 0x3557c160
.word 0xff3fffff
.word 0x79353274
.word 0x18901a60
.word 0x6f1658aa
.word 0xbf800000
.word 0x53363385
.word 0xbf800000
.word 0xcf3ff2b9
.word 0xbf800000
.word 0xe735076c
.word 0xbf800000
.word 0x3f8a09a6
.word 0xbf800000
.word 0x3f800000
.word 0x80000000
.word 0x3f800000
.word 0x0
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x3f8141be
.word 0x3f800000
.word 0x5d2106ce
.word 0x3f800000
.word 0x3f800000
.word 0x3f800000
.word 0x3345d2fe
.word 0x3f800000
.word 0xe34a63b3
.word 0x7f3fffff
.word 0x972d0ac8
.word 0x7f800000
.word 0x5f11d6c2
.word 0xff800001
.word 0x46b11042
.word 0xff800001
.word 0xaf13d5d0
.word 0x3e8
.word 0x3f800000
.word 0xff800000
.word 0x7f3fffff
.word 0xff3fffff
.word 0x7f3fffff
.word 0xbf800000
.word 0x7f3fffff
.word 0xbf800000
.word 0x7f3fffff
.word 0xbf800000
.word 0x7f3fffff
.word 0xbf800000
.word 0x7f3fffff
.word 0xbf800000
.word 0x7f3fffff
.word 0xbf800000
.word 0x7f3fffff
.word 0x80000000
.word 0x7f3fffff
.word 0x0
.word 0x7f3fffff
.word 0x3f800000
.word 0x7f3fffff
.word 0x3f800000
.word 0x7f3fffff
.word 0x3f800000
.word 0x7f3fffff
.word 0x3f800000
.word 0x7f3fffff
.word 0x3f800000
.word 0x7f3fffff
.word 0x3f800000
.word 0x7f3fffff
.word 0x7f3fffff
.word 0x7f3fffff
.word 0x7f800000
.word 0x7f3fffff
.word 0xff800001
.word 0x7f3fffff
.word 0xff800001
.word 0x7f3fffff
.word 0x3e8
.word 0x7f3fffff
.word 0xff800000
.word 0x7f800000
.word 0xff3fffff
.word 0x7f800000
.word 0xbf800000
.word 0x7f800000
.word 0xbf800000
.word 0x7f800000
.word 0xbf800000
.word 0x7f800000
.word 0xbf800000
.word 0x7f800000
.word 0xbf800000
.word 0x7f800000
.word 0xbf800000
.word 0x7f800000
.word 0x80000000
.word 0x7f800000
.word 0x0
.word 0x7f800000
.word 0x3f800000
.word 0x7f800000
.word 0x3f800000
.word 0x7f800000
.word 0x3f800000
.word 0x7f800000
.word 0x3f800000
.word 0x7f800000
.word 0x3f800000
.word 0x7f800000
.word 0x3f800000
.word 0x7f800000
.word 0x7f3fffff
.word 0x7f800000
.word 0x7f800000
.word 0x7f800000
.word 0xff800001
.word 0x7f800000
.word 0xff800001
.word 0x7f800000
.word 0x3e8
.word 0x7f800000
.word 0xff800000
.word 0xff800001
.word 0xff3fffff
.word 0xff800001
.word 0xbf800000
.word 0xff800001
.word 0xbf800000
.word 0xff800001
.word 0xbf800000
.word 0xff800001
.word 0xbf800000
.word 0xff800001
.word 0xbf800000
.word 0xff800001
.word 0xbf800000
.word 0xff800001
.word 0x80000000
.word 0xff800001
.word 0x0
.word 0xff800001
.word 0x3f800000
.word 0xff800001
.word 0x3f800000
.word 0xff800001
.word 0x3f800000
.word 0xff800001
.word 0x3f800000
.word 0xff800001
.word 0x3f800000
.word 0xff800001
.word 0x3f800000
.word 0xff800001
.word 0x7f3fffff
.word 0xff800001
.word 0x7f800000
.word 0xff800001
.word 0xff800001
.word 0xff800001
.word 0xff800001
.word 0xff800001
.word 0x3e8
.word 0xff800001
.word 0xff800000
.word 0xff800001
.word 0xff3fffff
.word 0xff800001
.word 0xbf800000
.word 0xff800001
.word 0xbf800000
.word 0xff800001
.word 0xbf800000
.word 0xff800001
.word 0xbf800000
.word 0xff800001
.word 0xbf800000
.word 0xff800001
.word 0xbf800000
.word 0xff800001
.word 0x80000000
.word 0xff800001
.word 0x0
.word 0xff800001
.word 0x3f800000
.word 0xff800001
.word 0x3f800000
.word 0xff800001
.word 0x3f800000
.word 0xff800001
.word 0x3f800000
.word 0xff800001
.word 0x3f800000
.word 0xff800001
.word 0x3c467dec
.word 0xff800001
.word 0x7f3fffff
.word 0xff800001
.word 0x7f800000
.word 0xff800001
.word 0xff800001
.word 0xff800001
.word 0xff800001
.word 0xff800001
.word 0x3e8
.word 0xff800001
.word 0xff800000
.word 0x3e8
.word 0xff3fffff
.word 0x3e8
.word 0xbf800240
.word 0x3e8
.word 0xbf800000
.word 0x3e8
.word 0xbf800000
.word 0x3e8
.word 0xbf800000
.word 0x3e8
.word 0xbf800000
.word 0x3e8
.word 0xbf800000
.word 0x3e8
.word 0x80000000
.word 0x3e8
.word 0x0
.word 0x3e8
.word 0x3f800000
.word 0x3e8
.word 0x3f800000
.word 0x3e8
.word 0x3f800000
.word 0x3e8
.word 0x3f800000
.word 0x3e8
.word 0x3f800000
.word 0x3e8
.word 0xf7689c6e
.word 0x3e8
.word 0x7f3fffff
.word 0x3e8
.word 0x7f800000
.word 0x3e8
.word 0xff800001
.word 0x3e8
.word 0xff800001
.word 0x3e8
.word 0x3e8
.word 0x3e8
RVTEST_DATA_END

RVMODEL_DATA_BEGIN


signature_x15_0:
    .fill 0*(XLEN/32),4,0xdeadbeef


signature_x15_1:
    .fill 213*(XLEN/32),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*(XLEN/32),4,0xdeadbeef

#endif

RVMODEL_DATA_END
